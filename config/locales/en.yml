---
en:
  base:
    about_a: "about a"
    accept: accept
    accepted: accepted
    account: account
    activate: activate
    activated: activated
    activation: activation
    add: add
    added: added
    adding: adding
    administrator: administrator
    all: all
    allow: allow
    allowed: allowed
    allows: allows
    any: any
    anyone: anyone
    approve: approve
    approved: approved
    are_you_sure: "Are {{t.base.you}} sure?"
    arent: aren't
    avatar: avatar
    back_to: "back to"
    basket: basket
    below: below
    browse: browse
    by: by
    can: can
    can_be: "{{t.base.can}} be"
    can_be_downloaded: "{{t.base.can_be}} {{t.base.downloaded}}"
    can_be_viewed: "{{t.base.can_be}} {{t.base.viewed}}"
    cancel: cancel
    cannot: cannot
    cannot_be: "{{t.base.cannot}} be"
    cannot_be_changed: "{{t.base.cannot_be}} {{t.base.changed}}"
    change: change
    changed: changed
    choice: choice
    choose: choose
    clear: clear
    cleared: cleared
    click: click
    close: close
    closed: closed
    code: code
    confirm: confirm
    contact: contact
    content: content
    content_type: "{{t.base.content}} {{t.base.type}}"
    contribute: contribute
    contributed: contributed
    contributing: contributing
    contribution: contribution
    contributor: contributor
    create: create
    created: created
    creation: creation
    date: date
    default: default
    delete: delete
    deleted: deleted
    description: description
    disable: disable
    disabled: disabled
    disallow: disallow
    disallowed: disallowed
    display: display
    do_not_reply: "This {{t.base.email}} was sent in bulk to authorized {{t.base.member.pluralize}}. Please don't reply to this {{t.base.email}}."
    downloaded: downloaded
    edit: edit
    edited: edited
    editing: editing
    email: email
    enable: enable
    enabled: enabled
    enter: enter
    entered: entered
    everyone: everyone
    existing: existing
    fail: fail
    failed: failed
    field: field
    flag: flag
    flagged: flagged
    flagging: flagging
    form: form
    from: from
    has: has
    has_been: "has been"
    hide: hide
    history: history
    import: import
    import_type: "{{t.base.import}} {{t.base.type}}"
    imported: imported
    importer: importer
    importing: importing
    inherit: inherit
    inside: inside
    invalid: invalid
    item: item
    join: join
    joined: joined
    language: language
    latest: latest
    license: license
    licensed: licensed
    locale: locale
    logged_in: "Logged in"
    login: login
    made: made
    member: member
    membership: membership
    moderate: moderate
    moderation: moderation
    moderator: moderator
    name: name
    new: new
    not_acceptable: "not acceptable"
    not_acceptable_size: "is {{t.base.not_acceptable}}. It should be less than {{max_size}} megabytes."
    not_available: "not available"
    only: only
    open: open
    option: option
    password: password
    phrases:
      change_password: "{{t.base.change.capitalize}} {{t.base.password}}"
      request_password: "{{t.base.request.capitalize}} {{t.base.password.downcase}}"
    please: please
    please_try_again: "{{t.base.please.capitalize}} try again"
    please_try_again_later: "{{t.base.please_try_again}} later"
    portrait: portrait
    preview: preview
    previous: previous
    privacy: privacy
    private: private
    profile: profile
    public: public
    recent: recent
    register: register
    registered: registered
    registering: registering
    reject: reject
    rejected: rejected
    rejecting: rejecting
    relate: relate
    related: related
    relates: relates
    relation: relation
    remove: remove
    removed: removed
    replace: replace
    replaced: replaced
    request: request
    requested: requested
    reset: reset
    restrict: restrict
    restricted: restricted
    results: results
    review: review
    reviewed: reviewed
    reviewing: reviewing
    revision: revision
    save: save
    saved: saved
    search: search
    searching: searching
    sent: sent
    show: show
    showing: showing
    sidebar: sidebar
    since: since
    site: site
    site_administrator: "{{t.base.site}} {{t.base.administrator}}"
    sort: sort
    sort_by: "{{t.base.sort}} {{t.base.by}}"
    sorted: sorted
    sorted_by: "{{t.base.sorted}} {{t.base.by}}"
    sorting: sorting
    successful: successful
    successfully: successfully
    tag: tag
    tagged: tagged
    technical_administrator: "technical {{t.base.administrator}}"
    thank_you: "Thank {{t.base.you}}"
    time: time
    topic_type: "{{t.base.zoom_types.topic}} type"
    type: type
    until: until
    update: update
    updated: updated
    user: user
    username: "user name"
    valid: valid
    value: value
    version: version
    view: view
    viewed: viewed
    viewing: viewing
    views: views
    was: was
    was_created: "{{t.base.was}} {{t.base.successfully}} {{t.base.created}}"
    was_deleted: "{{t.base.was}} {{t.base.successfully}} {{t.base.deleted}}"
    was_updated: "{{t.base.was}} {{t.base.successfully}} {{t.base.updated}}"
    whats_this: "what's this?"
    who_can: "who {{t.base.can}}"
    you: you
    your: your
    zoom_types:
      audio: audio
      combined: combined
      comment: comment
      discussion: discussion
      document: document
      image: image
      topic: topic
      video: video
      web_link: "web link"
  account:
    activate:
      button: "{{t.base.activate.capatalize}}"
      label: "{{t.base.activation.capitalize}} {{t.base.code.capitalize}}"
      title: "{{t.base.enter.capitalize}} {{t.base.your}} {{t.base.activation}} {{t.base.code}}"
    avatar_updater:
      add_avatar: "{{t.base.you.capitalize}} may designate a picture {{t.base.you}} have uploaded to the {{t.base.site}} as {{t.base.your}} {{t.base.portrait}} {{t.base.from}} {{profile_link}}."
      add_avatar_after_signup: "{{t.base.you.capitalize}} may designate a picture {{t.base.you}} have uploaded to the {{t.base.site}} as {{t.base.your}} {{t.base.portrait}} after {{t.base.you}} signup."
      fetching_avatar: "Fetching {{t.base.avatar}}. "
      gravatar_link: "This {{t.base.site}} supports {{gravatar_link}}"
      profile_link: "{{t.base.your}} {{t.base.profile}} page"
      your_avatar: "{{t.base.your.capitalize}} Gravatar. "
    baskets:
      title: "{{t.base.your.capitalize}} {{t.base.basket.pluralize}}"
    change_password:
      button: "{{t.base.phrases.change_password}}"
      confirm_pass: "{{t.base.confirm.capitalize}} {{t.base.password}}"
      new_pass: "{{t.base.new.capitalize}} {{t.base.password}}"
      old_pass: "Old {{t.base.password}}"
      title: "{{t.base.phrases.change_password}}"
    edit:
      allow_emails: "{{t.base.allow.capitalize}} {{t.base.email}} {{t.base.from}} other {{t.base.user.pluralize}}:"
      change_password: "{{t.base.phrases.change_password}}"
      email: "{{t.base.email.capitalize}}:"
      language: "{{t.base.language.capitalize}}:"
      language_example: "Which {{t.base.language}} would {{t.base.you}} like to {{t.base.view}} the {{t.base.site}} in?"
      login: "{{t.base.login.capitalize}}:"
      login_example: "{{t.base.your.capitalize}} {{t.base.username}} must be unique and contain no spaces. {{t.base.you.capitalize}} will be asked for this and {{t.base.your}} {{t.base.password}} everytime {{t.base.you}} {{t.base.login}}. If {{t.base.your}} {{t.base.name}} is \"John Smith\" then {{t.base.you}} could use \"jsmith\" as {{t.base.your}} {{t.base.login}}."
      preferred_license: "Preferred {{t.base.license.capitalize}}:"
      save: "{{t.base.save.capitalize}}"
      title: "{{t.base.edit.capitalize}} {{t.base.your}} details"
      user_name: "{{t.base.username.capitalize}}:"
      user_name_example: "This is the {{t.base.name}} others will see on {{t.base.your}} {{t.base.profile}} and when you make {{t.base.contribution.pluralize}} to the {{t.base.site}}. If you do not supply one, {{t.base.your}} {{t.base.login}} will be used instead. {{t.base.your.capitalize}} {{t.base.username}} can contain spaces. E.g if {{t.base.your}} {{t.base.login}} was \"jsmith\" {{t.base.your}} screen {{t.base.name}} could be \"John Smith\"."
    forgot_password:
      button: "{{t.base.phrases.request_password}}"
      email: "What is the {{t.base.email}} address used to {{t.base.create}} {{t.base.your}} {{t.base.account}}?"
      login: "What is the {{t.base.login}} of {{t.base.your}} {{t.base.account}}?"
      title: "{{t.base.phrases.request_password}}"
    locale_selection:
      change_locale: "{{t.base.change.capitalize}}"
      choose_locale: "-{{t.base.choose}} {{t.base.language}}-"
      language: "{{t.base.language.capitalize}}:"
    login:
      admin_details: "{{t.base.please.capitalize}} {{t.base.enter}} the {{t.base.default}} {{t.base.administrator}} {{t.base.account}} {{t.base.login}} and {{t.base.password}} to continue to configuration of the {{t.base.site}}."
      button: "{{t.base.login.capitalize}}"
      forgot_password: "Forgot {{t.base.your}} {{t.base.password}}? {{forgot_password_link}}"
      forgot_password_link: "{{t.base.click.capitalize}} here"
      login: "{{t.base.login.capitalize}}:"
      missing_explaination: "Kete requires {{t.base.you}} to install the following software and restart {{t.base.your}} server."
      missing_software: "Missing Software!"
      password: "{{t.base.password.capitalize}}:"
      register: "Are {{t.base.you}} {{t.base.registered}}? {{t.base.you.capitalize}} will need to {{register_link}} first before {{t.base.you}} can {{t.base.login}}."
      register_link: "{{t.base.register}}"
      remember_me: "Remember me:"
      title: "{{t.base.login.capitalize}} to {{site_name}}"
    portrait:
      title: "Drag and Drop {{t.base.portrait.pluralize}} within the 'Other {{t.base.portrait.pluralize.capitalize}}' section to reorder them or place on top of the current {{t.base.portrait}} to {{t.base.change}} it."
    portrait_controls:
      higher: "Move Higher. "
      lower: "Move Lower. "
      remove: "{{t.base.remove.capitalize}} {{t.base.portrait.capitalize}}. "
      selected: "Make Selected. "
    reset_password:
      button: "{{t.base.reset.capitalize}} {{t.base.your}} {{t.base.password}}"
      confirm_pass: "{{t.base.confirm.capitalize}} {{t.base.password}}:"
      new_pass: "{{t.base.password.capitalize}}:"
      title: "{{t.base.reset.capitalize}} {{t.base.password}}"
    show:
      baskets: "{{t.base.basket.pluralize.capitalize}}"
      change_password: "{{t.base.change}} {{t.base.password}}"
      change_portrait: "To {{t.base.change}} {{t.base.your}} selected {{t.base.portrait}}:"
      close_portrait_help: "{{t.base.close.capitalize}} X"
      contact_user: "{{t.base.contact.capitalize}} this {{t.base.user}}"
      contributions: "{{t.base.contribution.pluralize.capitalize}}"
      contributions_link: "{{t.base.item.capitalize.pluralize}} {{t.base.created}} {{t.base.by}} or {{t.base.contributed}} to {{t.base.by}} {{user_link}}"
      created: "{{t.base.created.capitalize}}:"
      current_license: "Current {{t.base.default}} {{t.base.license}}"
      drag_portraits: "Drag a {{t.base.new}} one {{t.base.from}} \"Other {{t.base.portrait.pluralize.capitalize}}\" and drop it on top of the current one (requires Javascript)."
      edit: "{{t.base.edit}}"
      editing_portraits: "{{t.base.editing.capitalize}} {{t.base.portrait.pluralize}}. "
      email: "{{t.base.email.capitalize}}:"
      gravatar: "{{t.base.add.capitalize}} an {{t.base.avatar}} to {{t.base.your}} {{t.base.account}} {{t.base.by}} {{t.base.registering}} a global {{t.base.portrait}} with {{gravatar_link}}."
      gravatar_link: gravatar.com
      license_thumbnail: "{{t.base.license.capitalize}} thumbnail. "
      new_portrait: "{{t.base.new}} {{t.base.portrait}}"
      new_portrait_link: "{{t.base.new}} {{t.base.portrait}}"
      other_portraits: "Other {{t.base.portrait.pluralize.capitalize}}"
      pending: Pending
      portrait_description: "{{t.base.portrait.pluralize.capitalize}} are a set of images you display on {{t.base.your}} {{t.base.profile}} page to {{t.base.user.pluralize}} who {{t.base.view}} it. It can be {{t.base.your}} own artwork uploaded to the {{t.base.site}}, or {{t.base.your}} favorite images. The first {{t.base.portrait}} {{t.base.added}} (which can be reordered later) becomes {{t.base.your}} 'selected' {{t.base.portrait}}, that is, the one you wish to use as an {{t.base.avatar}} around the {{t.base.site}}. It will be displayed on {{t.base.your}} {{t.base.profile}} page and next to {{t.base.any}} {{t.base.zoom_types.comment.pluralize}} you post."
      portrait_new: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.create}} a {{new_portrait_link}} by uploading a {{t.base.new}} image. Alternatively, you {{t.base.can}} go to an {{t.base.zoom_types.image}} you've {{uploaded_link}}, and select '{{t.base.add.capitalize}} {{t.base.zoom_types.image}} to {{t.base.portrait.pluralize}}' in the right sidebar."
      portrait_or_gravatar: "Alternatively, {{t.base.you}} {{t.base.can}} {{t.base.add}} a {{t.base.user}} {{t.base.portrait}} using the instructions above."
      rejected: "{{t.base.rejected.capitalize}}"
      request: "{{t.base.request.capitalize}}"
      selected_portrait: "Selected<br />{{t.base.portrait.capitalize}}"
      set_license: "{{t.base.click.capitalize}} the {{t.base.edit}} link above to set {{t.base.your}} {{t.base.default}} {{t.base.license}}."
      shift_portraits: "Use the arrow buttons to shift them around (when Javascript is off)."
      title: "{{t.base.profile.capitalize}} of {{user_name}}"
      uploaded_link: "uploaded before"
      user_name: "{{t.base.username.capitalize}}:"
      view_license: "({{t.base.view.capitalize}} {{t.base.license}})"
      whats_portraits: "{{t.base.whats_this}}"
    signup:
      agree_to: "I agree that I have read and {{t.base.accept}} the {{terms_and_conditions_link}}, {{privacy_policy_link}}, and {{house_rules_link}}."
      button: "Sign up"
      case_sensitive: "Text is case sensitive"
      confirm_password: "{{t.base.confirm.capitalize}} {{t.base.password}}:"
      email: "{{t.base.email.capitalize}}:"
      house_rules_link: "House Rules"
      language: "{{t.base.language.capitalize}}:"
      language_example: "Which {{t.base.language}} would {{t.base.you}} like to {{t.base.view}} the {{t.base.site}} in?"
      login: "{{t.base.login.capitalize}}:"
      login_example: "{{t.base.your.capitalize}} {{t.base.login}} needs to be unique and contain no spaces. {{t.base.you.capitalize}} will be asked for this and {{t.base.your}} {{t.base.password}} everytime {{t.base.you}} {{t.base.login}}. If {{t.base.your}} {{t.base.name}} is \"John Smith\" then {{t.base.you}} could use \"jsmith\" as {{t.base.your}} {{t.base.login}}."
      password: "{{t.base.password.capitalize}}:"
      preferred_license: "Preferred {{t.base.license.capitalize}}:"
      privacy_policy_link: "Privacy policy"
      security_code: "Security {{t.base.code.capitalize}}: {{t.base.please.capitalize}} {{t.base.enter}} the text {{t.base.from}} the {{t.base.zoom_types.image}} to the right"
      terms_and_conditions_link: "Terms and conditions"
      text_captcha: "or use a {{text_captcha_link}}"
      text_captcha_link: "non-{{t.base.zoom_types.image}} security question"
      title: Registration
      user_name: "{{t.base.username.capitalize}}:"
      user_name_example: "This is the {{t.base.name}} others will see on {{t.base.your}} {{t.base.profile}} and when you make {{t.base.contribution.pluralize}} to the {{t.base.site}}. If you do not supply one, {{t.base.your}} {{t.base.login}} will be used instead. {{t.base.your.capitalize}} {{t.base.username}} can contain spaces. E.g if {{t.base.your}} {{t.base.login}} was \"jsmith\" {{t.base.your}} screen {{t.base.name}} could be \"John Smith\"."
  account_controller:
    activate:
      activated: "{{t.base.your.capitalize}} {{t.base.account}} {{t.base.has_been}} {{t.base.activated}}.  {{t.base.please.capitalize}} {{t.base.login}}."
      not_activated: "Unable to {{t.base.activate}} the {{t.base.account}}.  {{t.base.please.capitalize}} check or {{t.base.enter}} manually."
    add_portrait:
      added_portrait: "'{{portrait_title}}' {{t.base.has_been}} {{t.base.added}} to {{t.base.your}} {{t.base.portrait.pluralize}}."
      failed_portrait: "'{{portrait_title}}' {{t.base.failed}} to {{t.base.add}} to {{t.base.your}} {{t.base.portrait.pluralize}}."
    change_locale:
      change_permanently: " If you prefer this {{t.base.language}} permanently, {{t.base.please}} set it via {{t.base.your}} {{t.base.account}} preference."
      locale_changed: "The {{t.base.locale}} {{t.base.has_been}} {{t.base.changed}}."
    change_password:
      password_changed: "{{t.base.password.capitalize}} {{t.base.changed}}"
      password_mismatch: "{{t.base.password.capitalize}} mismatch"
      password_not_changed: "{{t.base.password.capitalize}} not {{t.base.changed}}"
      wrong_password: "Wrong {{t.base.password}}"
    fetch_gravatar:
      your_gravatar: "{{t.base.your.capitalize}} Gravatar. "
    forgot_password:
      email_sent: "A {{t.base.password}} {{t.base.reset}} link {{t.base.has_been}} {{t.base.sent}} to {{t.base.your}} {{t.base.email}} address"
      more_than_one_account: "This {{t.base.email}} address belongs to more than one {{t.base.account}}. {{t.base.please.capitalize}} select the one you're trying to {{t.base.reset}}."
      no_such_email: "Could not find a {{t.base.user}} with that {{t.base.email}} address"
      no_such_login: "Could not find a {{t.base.user}} with that {{t.base.login}}"
    login:
      failed_login: "{{t.base.your.capitalize}} {{t.base.password}} or {{t.base.login}} do not match our records. {{t.base.please_try_again}}."
      logged_in: "{{t.base.logged_in}} {{t.base.successfully}}"
    logout:
      logged_out: "{{t.base.you.capitalize}} have been logged out."
    make_selected_portrait:
      failed_portrait: "'{{portrait_title}}' {{t.base.failed}} to become {{t.base.your}} selected {{t.base.portrait}}."
      made_selected: "'{{portrait_title}}' {{t.base.has_been}} {{t.base.made}} {{t.base.your}} selected {{t.base.portrait}}."
    move_portrait_higher:
      failed_portrait: "'{{portrait_title}}' {{t.base.failed}} to move closer to the front of {{t.base.your}} {{t.base.portrait.pluralize}}."
      moved_higher: "'{{portrait_title}}' {{t.base.has_been}} moved closer to the front of {{t.base.your}} {{t.base.portrait.pluralize}}."
    move_portrait_lower:
      failed_portrait: "'{{portrait_title}}' {{t.base.failed}} to move closer to the end of {{t.base.your}} {{t.base.portrait.pluralize}}."
      moved_lower: "'{{portrait_title}}' {{t.base.has_been}} moved closer to the end of {{t.base.your}} {{t.base.portrait.pluralize}}."
    redirect_if_user_portraits_arnt_enabled:
      not_enabled: "{{t.base.user.capitalize}} {{t.base.portrait.pluralize}} {{t.base.arent}} {{t.base.enabled}} so {{t.base.you}} {{t.base.cannot}} use this feature."
    remove_portrait:
      failed_portrait: "'{{portrait_title}}' {{t.base.failed}} to {{t.base.remove}} {{t.base.from}} {{t.base.your}} {{t.base.portrait.pluralize}}."
      removed_portrait: "'{{portrait_title}}' {{t.base.has_been}} {{t.base.removed}} {{t.base.from}} {{t.base.your}} {{t.base.portrait.pluralize}}."
    reset_password:
      invalid_reset: "Sorry - That is an {{t.base.invalid}} {{t.base.password}} {{t.base.reset}} {{t.base.code}}. {{t.base.please.capitalize}} check {{t.base.your}} {{t.base.code}} and try again. (Perhaps {{t.base.your}} {{t.base.email}} client inserted a carriage return?)"
      password_mismatch: "{{t.base.password.capitalize}} mismatch"
      password_not_reset: "{{t.base.password.capitalize}} not {{t.base.reset}}"
      password_reset: "{{t.base.password.capitalize}} {{t.base.reset}}"
    show:
      please_login: "{{t.base.you.capitalize}} must be {{t.base.logged_in.downcase}} to {{t.base.view}} {{t.base.user}} {{t.base.profile.pluralize}}."
    signup:
      signed_up: "Thanks for signing up!"
      signed_up_with_email: "Thanks for signing up! Expect an {{t.base.email}} with a {{t.base.code}} shortly to {{t.base.activate}} {{t.base.your}} {{t.base.account}}."
    update:
      user_updated: "{{t.base.user.capitalize}} {{t.base.was_updated}}."
    update_portraits:
      not_reordered: "The {{t.base.portrait.pluralize}} were not reordered permanently. You may only reorder {{t.base.portrait.pluralize}} if they are yours.  If they are, {{t.base.please_try_again}}."
      reordered: "{{t.base.your.capitalize}} {{t.base.portrait.pluralize}} have been {{t.base.successfully}} reordered."
  active_scaffold:
    ? "!="
    : "!="
    <: <
    <=: <=
    ? "="
    : "="
    ? ">"
    : ">"
    ? ">="
    : ">="
    _select_: "- select -"
    _to_: " to "
    add: "{{t.base.add.capitalize}}"
    add_existing: "{{t.base.add.capitalize}} {{t.base.existing.capitalize}}"
    add_existing_model: "{{t.base.add.capitalize}} {{t.base.existing.capitalize}} {{model}}"
    are_you_sure: "{{t.base.are_you_sure}}"
    between: Between
    cancel: "{{t.base.cancel}}"
    click_to_edit: "{{t.base.click.capitalize}} to {{t.base.edit}}"
    close: "{{t.base.close.capitalize}}"
    create: "{{t.base.create.capitalize}}"
    create_another: "{{t.base.create.capitalize}} Another"
    create_model: "{{t.base.create.capitalize}} {{model}}"
    create_new: "{{t.base.create.capitalize}} {{t.base.new.capitalize}}"
    created_model: "{{t.base.created.capitalize}} {{model}}"
    customize: Customize
    delete: "{{t.base.delete.capitalize}}"
    deleted_model: "{{t.base.deleted.capitalize}} {{model}}"
    delimiter: Delimiter
    download: Download
    edit: "{{t.base.edit.capitalize}}"
    export: Export
    filtered: (Filtered)
    found: Found
    hide: "{{t.base.hide.capitalize}}"
    internal_error: "{{t.base.request.capitalize}} {{t.base.failed.capitalize}} (code 500, Internal Error)"
    live_search: "Live {{t.base.search.capitalize}}"
    loading: Loading…
    nested_for_model: "{{nested_model}} for {{parent_model}}"
    next: Next
    no_entries: "No Entries"
    omit_header: "Omit Header"
    options: Options
    pdf: PDF
    previous: Previous
    print: Print
    refresh: Refresh
    remove: "{{t.base.remove.capitalize}}"
    remove_file: "{{t.base.remove.capitalize}} or {{t.base.replace.capitalize}} file"
    replace_with_new: "{{t.base.replace.capitalize}} With {{t.base.new.capitalize}}"
    reset: "{{t.base.reset.capitalize}}"
    revisions_for_model: "Revisions for {{model}}"
    saving: Saving…
    search: "{{t.base.search.capitalize}}"
    search_terms: "{{t.base.search.capitalize}} Terms"
    show: "{{t.base.show.capitalize}}"
    show_model: "{{t.base.show.capitalize}} {{model}}"
    udated_model: "{{t.base.updated.capitalize}} {{model}}"
    update: "{{t.base.update.capitalize}}"
    update_model: "{{t.base.update.capitalize}} {{model}}"
    version_inconsistency: "Version inconsistency - this record {{t.base.has_been}} modified since {{t.base.you}} started {{t.base.editing}} it."
  activerecord:
    errors:
      messages:
        accepted: "must be {{t.base.accepted}}"
        blank: "can't be blank"
        confirmation: "doesn't match confirmation"
        empty: "can't be empty"
        equal_to: "must be equal to {{count}}"
        even: "must be even"
        exclusion: "is reserved"
        greater_than: "must be greater than {{count}}"
        greater_than_or_equal_to: "must be greater than or equal to {{count}}"
        inclusion: "is not included in the list. Are you sure {{t.base.entered}} the right type of file for what you wanted to upload?  For example, a .jpg for an image."
        invalid: "is {{t.base.invalid}}"
        less_than: "must be less than {{count}}"
        less_than_or_equal_to: "must be less than or equal to {{count}}"
        not_a_number: "is not a number"
        odd: "must be odd"
        taken: "has already been taken"
        too_long: "is too long (maximum is {{count}} characters)"
        too_short: "is too short (minimum is {{count}} characters)"
        wrong_length: "is the wrong length (should be {{count}} characters)"
      template:
        body: "There were problems with the following {{t.base.field.pluralize}}:"
        header:
          one: "1 error prohibited this {{model}} {{t.base.from}} being {{t.base.saved}}"
          other: "{{count}} errors prohibited this {{model}} {{t.base.from}} being {{t.base.saved}}"
  application_controller:
    link_related:
      added_relation: "{{t.base.successfully.capitalize}} {{t.base.added}} {{t.base.item}} relationships"
    redirect_if_current_basket_isnt_approved_for_public_viewing:
      not_available: "The {{t.base.basket}} {{basket_name}} is not {{t.base.approved}} for {{t.base.public}} {{t.base.viewing}}"
    rescue_404:
      title: "404 Not Found"
    rescue_500:
      title: "500 Internal Server Error"
    setup_related_topic_and_zoom_and_redirect:
      created: "{{zoom_class}} {{t.base.was_created}}."
      portrait: "{{zoom_class}} {{t.base.was_created}} as a {{t.base.portrait}}."
      related_item: "{{t.base.related.capitalize}} {{zoom_class}} {{t.base.was_created}}."
      selected_portrait: "{{zoom_class}} {{t.base.was_created}} as {{t.base.your}} selected {{t.base.portrait}}."
    unlink_related:
      unlinked_relation: "{{t.base.successfully.capitalize}} {{t.base.removed}} {{t.base.item}} relationships"
  application_helper:
    add_search_icon_and_default_text_to_search_box:
      more_search_options: "More {{t.base.search}} {{t.base.option.pluralize}}"
    avatar_for:
      users_avatar: "{{user_name}}'s {{t.base.avatar.capitalize}}. "
    browse_by_category_columns:
      all_items: "{{t.base.all.capitalize}} {{item_type}}"
    embedded_enabled_message:
      harvesting: "Embedded metadata will be harvested {{t.base.from}} the {{t.base.item}}'s binary file to fill out {{t.base.any}} {{t.base.field.pluralize}} that match the site's settings."
    flagging_links_for:
      can_you_edit: "Remember, you may have the option to directly {{t.base.edit}} this {{t.base.item}} or alternatively discuss it. Are you sure you want to {{t.base.flag}} it instead?"
      flag_as: "{{t.base.flag.capitalize}} as:"
    header_add_basket_link:
      add_basket: "{{t.base.add.capitalize}} {{t.base.basket.capitalize}}"
      request_basket: "{{t.base.request.capitalize}} {{t.base.basket.capitalize}}"
    header_add_links:
      add_item: "{{t.base.add.capitalize}} {{t.base.item.capitalize}}"
    header_browse_links:
      browse: "{{t.base.browse.capitalize}}"
      browse_or: or
    header_link_to_current_basket:
      separator: ":"
    header_links_to_baskets:
      more_baskets: more...
    kete_time_ago_in_words:
      longer_than_a_week: "on {{date}}"
      within_a_week: "{{time}} ago"
    link_for_rss:
      link_text: "{{t.base.from.capitalize}} {{t.base.all}} {{t.base.type.pluralize}} {{t.base.zoom_types.combined}}"
    link_to_add_item:
      in_basket: " in {{basket_name}}"
    link_to_add_set_of_related_items:
      link_text: "{{t.base.import.capitalize}} Set of {{t.base.related.capitalize}} {{t.base.item.capitalize.pluralize}}"
    link_to_basket_contact_for:
      contact: "{{t.base.contact.capitalize}}"
    link_to_cancel:
      cancel: "{{t.base.cancel}}"
    link_to_last_stored_location:
      back_to_kete_home: "&lt;&lt; {{t.base.back_to.capitalize}} Kete Home"
      back_to_stored_location: "&lt;&lt; {{t.base.back_to.capitalize}} '{{stored_location}}'"
    link_to_members_of:
      members_link_text: "{{t.base.member.capitalize.pluralize}}"
    link_to_membership_request_of:
      current_role: "You're a |role|."
      join: "{{t.base.join.capitalize}}"
      leave: Leave
      pending: "{{t.base.membership.capitalize}} pending"
      rejected: "{{t.base.membership.capitalize}} {{t.base.rejected}}"
      request: "{{t.base.request.capitalize}} {{t.base.membership}}"
    link_to_original_of:
      phrase: "{{t.base.view}}"
    link_to_preview_of:
      not_available: "{{t.base.not_available}}"
    link_to_related_item_function:
      link_text: "{{function}} an {{t.base.existing.capitalize}} {{t.base.related.capitalize}} {{t.base.item.capitalize}}"
    link_to_related_items_of:
      link_text: "{{t.base.view.capitalize}} {{t.base.item.pluralize}} {{t.base.related}} to {{item_title}}"
    pending_review:
      no_safe_version: "currently no non-disputed {{privacy_type}} versions of this {{t.base.item}}. Details of the {{privacy_type}} version of this {{t.base.item}} are not being displayed at this time."
      pending: "{{t.base.review.capitalize}} Pending:"
      reverted: "currently reverted to non-disputed {{privacy_type}} version # {{item_version}}"
    privacy_image:
      private: "{{t.base.private}}: "
    related_image_link_for:
      only_original: "{{t.base.only}} available as original"
    related_items_positions:
      below: "{{t.base.below.capitalize}} the {{t.base.item.capitalize}} Description"
      inset: "{{t.base.inside.capitalize}} the {{t.base.item.capitalize}} Description"
      sidebar: "In the {{t.base.item.capitalize.pluralize}} {{t.base.sidebar.capitalize}}"
    render_baskets_as_menu:
      more: More..
    search_sorting_controls_for:
      ascending: "Ascending. "
      descending: "Descending. "
    show_comments_for:
      comment_count: "There are {{count}} {{t.base.zoom_types.comment.pluralize}} in this {{t.base.zoom_types.discussion}}."
      confirm_delete: "{{t.base.are_you_sure}}"
      delete: "{{t.base.delete.capitalize}}"
      edit: "{{t.base.edit.capitalize}}"
      history: "{{t.base.history.capitalize}}"
      join_discussion: "{{t.base.join}} this {{t.base.zoom_types.discussion}}"
      posted_on: "Posted on"
      read_and: "Read and "
      reply: Reply
      said: said
    tags_for:
      tags: "{{t.base.tag.capitalize.pluralize}}:"
    tags_input_field:
      tags: "{{t.base.tag.capitalize.pluralize}} (separated {{t.base.by}} commas):"
    users_baskets_list:
      basket_pending: " (pending)"
  audio:
    details:
      filename: "Filename:"
      listen: listen
      not_available: "{{t.base.not_available}} for download"
      size: "Size:"
      type: "Recording {{t.base.type}}:"
    edit:
      not_allowed: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
  audio_controller:
    update:
      updated: "{{t.base.zoom_types.audio.capitalize}} {{t.base.was_updated}}."
  audio_recording_model:
    not_acceptable_content_type: "is {{t.base.not_acceptable}}. It should be a .mp3, .m4a, or other {{t.base.zoom_types.audio}} file."
    not_acceptable_size: "{{t.base.not_acceptable_size}}"
  authenticated_system_lib:
    login_from_cookie:
      logged_in: "{{t.base.logged_in}} {{t.base.successfully}}"
  authorization_initializer:
    permission_denied: "Permission denied. {{t.base.your.capitalize}} {{t.base.account}} {{t.base.cannot}} access the {{t.base.requested}} page."
  basket_model:
    all_users: "{{t.base.all.capitalize}} {{t.base.user.pluralize}}"
    archives_by_type: "{{t.base.by.capitalize}} {{t.base.type}}"
    archives_dont_show: "Don't {{t.base.show}} them"
    basket_admin: "{{t.base.basket.capitalize}} admin"
    basket_appearance: "{{t.base.basket.capitalize}} Appearance"
    basket_homepage_options: "{{t.base.basket.capitalize}} Homepage Options"
    basket_member: "{{t.base.basket.capitalize}} {{t.base.member}}"
    basket_moderator: "{{t.base.basket.capitalize}} {{t.base.moderator}}"
    basket_new_or_edit: "{{t.base.basket.capitalize}} {{t.base.new.capitalize}} or {{t.base.edit.capitalize}}"
    cannot_delete_site: "Error: {{t.base.cannot.capitalize}} {{t.base.delete}} {{t.base.site}} {{t.base.basket}}!"
    details_and_comments: "Full details and {{t.base.zoom_types.comment.pluralize}}"
    dont_link: "Don't link"
    font_sans_serif: "Sans Serif (Arial, Helvetica, and the like)"
    font_serif: "Serif (Times New Roman, etc.)"
    font_use_theme_default: "Use theme {{t.base.default}}"
    image_dont_show: "No {{t.base.zoom_types.image}}"
    image_latest: "{{t.base.latest.capitalize}}"
    image_random: Random
    logged_in: "{{t.base.logged_in}} {{t.base.user}}"
    moderate_before_approved: "{{t.base.moderator}} {{t.base.views}} before {{t.base.item}} {{t.base.approved}}"
    moderate_on_flagged: "{{t.base.moderation}} upon being {{t.base.flagged}}"
    now_in_site_basket: "This version was in {{basket_name}} {{t.base.basket}}, but that {{t.base.basket}} {{t.base.has_been}} {{t.base.deleted}} and no longer exists on the {{t.base.site}}, now this version is put in {{t.base.default}} {{t.base.site}} {{t.base.basket}}."
    only_comments: "{{t.base.only.capitalize}} {{t.base.zoom_types.comment.pluralize}}"
    only_details: "{{t.base.only.capitalize}} full details"
    private_item_notification_or_default:
      dont_send_notification: "Don't send {{t.base.email}} notification"
    recent_as_headlines: "Headlines (news style)"
    recent_as_summaries: "Summaries (blog style)"
    recent_dont_show: "Don't {{t.base.show}} them"
    site_admin: "Site admin"
    tags_as_categories: Categories
    tags_as_tag_cloud: "{{t.base.tag.capitalize}} Cloud"
    tags_ordered_by_name: "{{t.base.by.capitalize}} {{t.base.name.capitalize}}"
    tags_ordered_latest: "{{t.base.latest.capitalize}}"
    tags_ordered_most_popular: "Most Popular"
    tags_ordered_random: Random
  baskets:
    actions_menu:
      appearance: Appearance
      delete: "{{t.base.delete.capitalize}}"
      delete_confirmation: "{{t.base.are_you_sure}} {{t.base.all.capitalize}} {{t.base.item.pluralize}} in this {{t.base.basket}} will be {{t.base.deleted}} forever!"
      edit: "{{t.base.edit.capitalize}}"
      homepage_options: "Homepage Options"
      importers: Importers
      members: "{{t.base.member.capitalize.pluralize}}"
      moderate: "{{t.base.moderate.capitalize}}"
    appearance:
      additional_footer_content: "Additional Footer {{t.base.content.capitalize}}:"
      additional_footer_content_exception: "{{t.base.allow.capitalize}} {{t.base.form.pluralize}} and other possible insecure elements and attributes in the HTML?"
      additional_footer_content_replace: "{{t.base.replace}} {{t.base.existing}} footer with above {{t.base.content}}?"
      additional_footer_content_replace_example: "If checked, the above footer will totally {{t.base.replace}} the bottom of each page.  If you would rather it appear above the \"Accessibility | Sitemap | {{t.base.back_to.capitalize}} Content\" links, rather than {{t.base.replace}} them, leave this unchecked."
      additional_footer_content_security: "Note: {{t.base.form.pluralize}} and javascript are not {{t.base.allowed}} for security reasons."
      additional_footer_content_security_admin: "Unless you check the box below."
      basket_list_options: "{{t.base.basket.capitalize}} List Menu Options:"
      basket_list_options_example: "These settings {{t.base.only}} take effect if the {{t.base.basket}} list navigation menu is on in your template."
      basket_list_options_in_reverse: "in reverse?"
      basket_list_options_sort_by: "{{t.base.sort_by.capitalize}}:"
      basket_list_options_topic_number: "Number of {{t.base.zoom_types.topic.pluralize}} to {{t.base.show}} when in this {{t.base.basket}}?:"
      button: "{{t.base.save.capitalize}}"
      controls: "{{t.base.show.capitalize}}/{{t.base.hide.capitalize}} Controls:"
      current_header: "Current {{t.base.basket.capitalize}} Header Image. "
      current_inheritance: "The {{t.base.site.capitalize}} uses the <strong>{{theme_name}}</strong> theme."
      font_family: "Font Family:"
      header_example: "URL for background {{t.base.zoom_types.image}} for the top of each page:"
      inherit: "{{t.base.inherit.capitalize}}"
      inherit_example: "{{t.base.inherit.capitalize}} this setting {{t.base.from}} the {{t.base.site.capitalize}} {{t.base.basket}}."
      new_theme: "{{t.base.add.capitalize}} {{t.base.new}} theme"
      no_themes: "No themes beyond the {{t.base.default}} are available right now."
      screenshot_of: "Screenshot of {{theme}} theme. "
      show_actions_to: "{{t.base.show.capitalize}} Action Menu to:"
      show_actions_to_example: "({{t.base.who_can}} see the {{t.base.view}}, {{t.base.edit}}, {{t.base.history}} and other links)"
      show_add_links_to: "{{t.base.show.capitalize}} {{t.base.add.capitalize}} Links to:"
      show_add_links_to_example: "({{t.base.who_can}} {{t.base.relate}} or link {{t.base.item.pluralize}} together)"
      show_comments_to: "{{t.base.show.capitalize}} {{t.base.zoom_types.comment.pluralize.capitalize}} to:"
      show_comments_to_example: "({{t.base.who_can}} see and {{t.base.add}} {{t.base.zoom_types.comment.pluralize}})"
      show_flagging_to: "{{t.base.show.capitalize}} {{t.base.flagging.capitalize}} to:"
      show_flagging_to_example: "({{t.base.who_can}} {{t.base.flag}} {{t.base.item.pluralize}})"
      theme: "Theme:"
      title: "{{basket_name}} Appearance"
    basket_feeds_fields:
      add_another_feed: Add Another Feed
      how_to_remove_feed: "(to delete a feed, remove the value of the Feed URL field and save)"
    choose_type:
      add_a: "{{t.base.add.capitalize}} a?"
      add_in: "{{t.base.add.capitalize}} in?"
      button: "{{t.base.choose.capitalize}}"
      choose_type: "{{t.base.choose}} {{t.base.item}} {{t.base.type}}"
      no_baskets_available: "No {{t.base.basket.pluralize}} Available"
      no_baskets_available_description: "There are no {{t.base.basket.pluralize}} that {{t.base.you}} have access to {{t.base.add}} {{t.base.item.pluralize}} to."
      no_baskets_available_try_later: "Find a {{t.base.basket}} to {{t.base.join}}, or {{t.base.please_try_again_later}}."
      spinner_working: "Working... "
      that_relates_to: "that {{t.base.relates}} to {{topic_title}}"
      what_to_add: "What would {{t.base.you}} like to {{t.base.add}}"
      where_to_add: "Where would {{t.base.you}} like to {{t.base.add}} it?"
    edit:
      accept: "{{t.base.accept.capitalize}} {{t.base.basket}}"
      currently_rejected: "(currently {{t.base.rejected}})"
      reject: "{{t.base.reject.capitalize}} {{t.base.basket}}"
      title: "{{basket_name}} {{t.base.edit.capitalize}}"
      update: "{{t.base.update.capitalize}}"
    form:
      admin_contact: "{{t.base.administrator.capitalize}} {{t.base.contact}}?"
      admin_contact_disabled_example: "{{t.base.user.capitalize.pluralize}} will not be able to {{t.base.contact}} {{t.base.administrator.pluralize}}."
      admin_contact_enabled_example: "A link will be provided that {{t.base.allows}} {{t.base.user.pluralize}} to send a message to {{t.base.administrator.pluralize}}."
      admin_contain_current_inheritance: "The {{t.base.site.capitalize}} {{t.base.has}} <strong>{{current_inheritance}}</strong> use of the {{t.base.administrator}} {{t.base.contact}} {{t.base.form}}."
      browse_order: "{{t.base.default.capitalize}} {{t.base.browse.capitalize}} Results Order:"
      browse_order_default: "use software {{t.base.default}}"
      browse_order_in_reverse: "in reverse?"
      browse_order_sort_by: "{{t.base.sort_by.capitalize}}:"
      browse_view_as: "{{t.base.default.capitalize}} {{t.base.browse.capitalize}} {{t.base.type.capitalize}}:"
      browse_view_as_choice: "The {{t.base.default}} {{t.base.browse}} {{t.base.type}} should be a?"
      comment_control: "{{t.base.who_can.capitalize}} {{t.base.add}}, {{t.base.edit}} and {{t.base.update}} {{t.base.zoom_types.comment.pluralize}} on {{t.base.item.pluralize}}?:"
      comment_control_allows: "{{t.base.allows}}"
      comment_control_anyone: "{{t.base.anyone.capitalize}} {{t.base.logged_in.downcase}}"
      comment_control_current_inheritance: "The {{t.base.site.capitalize}} <strong>{{current_inheritance}}</strong> non {{t.base.basket}} {{t.base.member.pluralize}} to post {{t.base.zoom_types.comment.pluralize}}"
      comment_control_members: "{{t.base.only.capitalize}} {{t.base.basket}} {{t.base.member.pluralize}}"
      comment_control_not_allows: "doesn't {{t.base.allow}}"
      disabled: "{{t.base.disabled.capitalize}}"
      doesnt_inherit: "(this setting does not {{t.base.inherit}} to other {{t.base.basket.pluralize}})"
      enabled: "{{t.base.enabled.capitalize}}"
      file_privacy: "{{t.base.default.capitalize}} Original File Privacy:"
      file_privacy_current_inheritance: "The {{t.base.site.capitalize}} {{t.base.has}} files <strong>{{current_inheritance}}</strong> {{t.base.by}} {{t.base.default}}"
      file_privacy_example: "{{t.base.you.capitalize}} may use this to restrict the download of an {{t.base.item}}'s original file.  For example, {{t.base.you}} may set a {{t.base.zoom_types.document}} to be '{{t.base.public}}' and {{t.base.show}} the information about it, but limit downloading the actual {{t.base.zoom_types.document}} file to {{t.base.basket}} {{t.base.member.pluralize}}.  Note this applies across all versions of an {{t.base.item}}."
      file_privacy_private_example: "{{t.base.can_be_downloaded.capitalize}} {{t.base.only}} {{t.base.by}} authorized {{t.base.basket}} {{t.base.member.pluralize}}"
      file_privacy_public_example: "{{t.base.can_be_downloaded.capitalize}} {{t.base.by}} {{t.base.everyone}}"
      file_visibility: "{{t.base.private.capitalize}} Original Files Visibility:"
      file_visibility_example: "To {{t.base.view}} {{t.base.private.downcase}} attached files {{t.base.you}} must be at least a:"
      import_archive_set_policy: "Import Archive Set Policy:"
      import_archive_set_policy_example: "To import archive sets you must be at least a:"
      inherit: "{{t.base.inherit.capitalize}}"
      inherit_example: "{{t.base.inherit.capitalize}} this setting {{t.base.from}} the {{t.base.site.capitalize}} {{t.base.basket}}."
      isnt_inherited: "(this setting is not inherited {{t.base.from}} {{t.base.site}} {{t.base.basket}})"
      item_privacy: "{{t.base.default.capitalize}} {{t.base.item.capitalize}} Privacy:"
      item_privacy_current_inheritance: "The {{t.base.site.capitalize}} {{t.base.has}} {{t.base.item.pluralize}} <strong>{{current_inheritance}}</strong> {{t.base.by}} {{t.base.default}}"
      item_privacy_private_example: "{{t.base.can_be_viewed.capitalize}} {{t.base.only}} {{t.base.by}} {{t.base.basket}} {{t.base.member.pluralize}}"
      item_privacy_public_example: "{{t.base.can_be_viewed.capitalize}} {{t.base.by}} {{t.base.everyone}}"
      join_policy: "{{t.base.join.capitalize}} Policy:"
      join_policy_closed: "{{t.base.closed.capitalize}} {{t.base.membership.capitalize}}"
      join_policy_closed_example: "{{t.base.closed.capitalize}} {{t.base.basket}} {{t.base.membership.capitalize}}. {{t.base.member.capitalize.pluralize}} have to be {{t.base.added}} {{t.base.by}} {{t.base.basket}} {{t.base.administrator.capitalize.pluralize}} manually."
      join_policy_current_inheritance: "The {{t.base.site.capitalize}} {{t.base.has}} {{t.base.basket}} {{t.base.membership}} <strong>{{current_inheritance}}</strong> {{t.base.by}} {{t.base.default}}"
      join_policy_open: "{{t.base.open.capitalize}} {{t.base.membership.capitalize}}"
      join_policy_open_example: "{{t.base.enable.capitalize}} {{t.base.open.capitalize}} {{t.base.basket}} {{t.base.membership.capitalize}}. {{t.base.anyone.capitalize}} can {{t.base.join}} this {{t.base.basket}} with one {{t.base.click}}."
      join_policy_request: "{{t.base.request.capitalize}} {{t.base.membership.capitalize}}"
      join_policy_request_example: "{{t.base.enable.capitalize}} {{t.base.requested.capitalize}} {{t.base.basket}} {{t.base.membership.capitalize}}. {{t.base.basket}} {{t.base.administrator.capitalize.pluralize}} have to approve or {{t.base.reject}} each application."
      member_list_policy: "{{t.base.member.capitalize}} List Policy:"
      member_list_policy_example: "To {{t.base.view}} the {{t.base.member}} list {{t.base.you}} must be at least a:"
      moderate_except: "{{t.base.moderator.capitalize}} {{t.base.views}} {{t.base.item.pluralize}} before {{t.base.approved}} EXCEPT:"
      moderation: "{{t.base.moderation.capitalize}} Policy:"
      name: "{{t.base.name.capitalize}}:"
      privacy_controls: "Privacy Controls:"
      privacy_controls_current_inheritance: "The {{t.base.site.capitalize}} {{t.base.has}} <strong>{{current_inheritance}}</strong> Privacy Controls"
      privacy_controls_disabled_example: "Disable Privacy Controls if {{t.base.member.pluralize}} {{t.base.can}} {{t.base.only}} {{t.base.create}} publicly readable {{t.base.item.pluralize}}."
      privacy_controls_enabled_example: "{{t.base.enable.capitalize}} Privacy Controls if {{t.base.member.pluralize}} of this {{t.base.basket}} can have both {{t.base.item.pluralize}} that are readable by the {{t.base.public.downcase}} at large AND {{t.base.item.pluralize}} that are {{t.base.only}} readable by themselves."
      privacy_controls_site_basket: "This {{t.base.basket.pluralize}} browsing controls are left {{t.base.enabled}} if {{t.base.any}} other {{t.base.basket.pluralize}} have privacy controls turned on (for site-wide {{t.base.private.downcase}} {{t.base.search}})"
      private: "{{t.base.private.capitalize}}"
      private_item_notification: "{{t.base.private.capitalize}} {{t.base.item.capitalize}} notification"
      private_item_notification_example: "Whenever {{t.base.private}} {{t.base.item.pluralize}} are {{t.base.changed}}, which role of {{t.base.user.pluralize}} (and above) should be notified {{t.base.by}} {{t.base.email}}?"
      private_item_notification_show_short_summary: "{{t.base.show.capitalize}} {{t.base.private}} {{t.base.item}} short summary in {{t.base.email}} notifications?"
      private_item_notification_show_title: "{{t.base.show.capitalize}} {{t.base.private}} {{t.base.item}} title in {{t.base.email}} notifications?"
      public: "{{t.base.public.capitalize}}"
      recent_topics: "{{t.base.disable.capitalize}} {{t.base.site.capitalize}} {{t.base.recent.capitalize}} {{t.base.zoom_types.topic.capitalize.pluralize}} Display:"
      recent_topics_example: "Do not {{t.base.show}} {{t.base.new}}/{{t.base.edited}} {{t.base.zoom_types.topic.pluralize}} in {{t.base.recent}} results on the {{t.base.site.capitalize}} {{t.base.basket}}?"
    homepage_form:
      archives: Archives
      archives_as: "List {{t.base.basket.pluralize}} archive {{t.base.content.pluralize}} as?"
      dont_redirect: "Don't redirect"
      go_to_browse: "Go directly to \"{{t.base.browse}}\" options"
      homepage_link: "A link to the homepage topic's?"
      homepage_topic: "Homepage {{t.base.zoom_types.topic.capitalize}}"
      include_search: "Include {{t.base.basket.pluralize}} {{t.base.search}} {{t.base.form}}?"
      only_homepage: "{{t.base.show.capitalize}} {{t.base.only}} homepage {{t.base.zoom_types.topic}}?"
      recent_topics: "{{t.base.recent.capitalize}} {{t.base.zoom_types.topic.capitalize.pluralize}}"
      recent_topics_amount: "List how many {{t.base.recent}} {{t.base.zoom_types.topic.pluralize}}?"
      recent_topics_example: "Including a rolling list of {{t.base.recent}} {{t.base.zoom_types.topic.pluralize}} is an excellent way to present this {{t.base.basket}} as a blog or a news site."
      recent_topics_type: "List {{t.base.basket.pluralize}} {{t.base.zoom_types.topic.pluralize}} as?"
      redirect_to: "Redirect to results of?"
      rss_feeds: "RSS or Atom Feeds"
      search: "{{t.base.search.capitalize}}"
      security_exception_example: "{{t.base.allow.capitalize}} {{t.base.form.pluralize}} and other possible insecure elements and attributes in the HTML?"
      security_warning: "Note: {{t.base.form.pluralize}} and javascript are not {{t.base.allowed}} for security reasons."
      security_warning_admin: "Unless {{t.base.you}} check the box below."
      selected_image: "Selected {{t.base.zoom_types.image.capitalize}}"
      selected_image_show: "{{t.base.show.capitalize}} {{t.base.zoom_types.image}} {{t.base.from}} {{t.base.basket}}?"
      sidebar_content: "Sidebar {{t.base.content}} after {{t.base.search}}"
      tags: "{{t.base.tag.capitalize.pluralize}}"
      tags_amount: "List how many {{t.base.tag.pluralize}}?"
      tags_as: "List {{t.base.basket.pluralize}} {{t.base.tag.pluralize}} as?"
      tags_ordered_by: "Order {{t.base.tag.pluralize}} {{t.base.by}}?"
    homepage_options:
      button: "{{t.base.save.capitalize}}"
      current_homepage: "Current homepage {{t.base.zoom_types.topic}}:"
      link_homepage: "Link to {{t.base.new}} {{t.base.basket}} homepage {{t.base.zoom_types.topic}}"
      new_homepage: "{{t.base.add.capitalize}} {{t.base.new}} {{t.base.basket}} homepage {{t.base.zoom_types.topic}}"
      title: "{{basket_name}} Homepage Options"
    list:
      all: "{{t.base.all}}"
      options: Options
      rejected: "{{rejected_num}} {{t.base.rejected}}"
      requests: "{{request_num}} requests"
      sort_by_created_at: "{{t.base.created.capitalize}}"
      sort_by_name: "{{t.base.name.capitalize}}"
      title: "{{t.base.basket.pluralize}}"
    new:
      choose_profile: "{{t.base.choose.capitalize}}"
      title: "{{t.base.choose.capitalize}} {{t.base.basket.capitalize}} {{t.base.profile.capitalize}}"
      which_profile: "Which {{t.base.profile}} for this {{t.base.basket}}?"
      working: "Working.. "
    new_form:
      create: "{{t.base.create.capitalize}}"
      request: "{{t.base.request.capitalize}}"
      title: "{{t.base.new.capitalize}} {{t.base.basket}}"
    permission_denied:
      basket_contact_link: "{{t.base.contact}} this {{t.base.basket}}'s {{t.base.administrator.pluralize}}"
      basket_join_link: "{{t.base.basket}} {{t.base.join}} {{t.base.form}}"
      email_link: "this {{t.base.contact.capitalize}} link"
      login_link: "logging in"
      part1: "We're sorry, but access to the page you {{t.base.requested}} is restricted. Here are some possible ways you may proceed:"
      part2: "If you are using a shared computer, make sure you're {{t.base.logged_in.downcase}} with the {{t.base.account}} that has access to this area. Try {{login_link}} again before revisiting the page."
      part3: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.join}}, or apply to {{t.base.join}}, the {{t.base.basket}} by visiting the {{basket_join_link}}. If {{t.base.join.pluralize}} need to be {{t.base.approved}}, you'll receive an {{t.base.email}} when you're let in. Otherwise, you should be able to access the {{t.base.basket}} {{t.base.content}} instantly."
      part4: "If you should have permission to access this part of the {{t.base.site}}, you can try {{basket_contact_link}}"
      part5: "Use {{email_link}} to {{t.base.email}} a {{t.base.site_administrator}} to report the issue. {{t.base.please.capitalize}} specify that what page you tried to access in the email."
      part6: "Or simply proceed on to another page via the {{t.base.browse.capitalize}} or {{t.base.search.capitalize}} functions at the top of this page."
      thank_you: "{{t.base.thank_you}},"
      title: "Permission Denied"
    rss:
      description: "{{t.base.latest.capitalize}} {{t.base.basket.pluralize}}"
      title: "{{site_name}} - {{t.base.latest.capitalize}} {{amount}} {{t.base.basket.pluralize}}"
    rss_feed:
      in_minutes: "in minutes"
      limit: "Display Limit:"
      limit_description: "Maximum number of entries to display - optional"
      optional: "optional"
      remove_feed: "(remove)"
      title: "Feed Title:"
      title_description: "The title of the feed to be displayed on the homepage"
      update_frequency: "Update Frequency:"
      update_frequency_description: "Update frequency in minutes - optional"
      url: "Feed URL:"
      url_description: "The RSS 1, RSS 2, or Atom feed that you want displayed"
    show:
      back: Back
      edit: "{{t.base.edit.capitalize}}"
  baskets_controller:
    add_index_topic:
      created: "{{t.base.basket.capitalize}} homepage {{t.base.was_created}}."
    create:
      created: "{{t.base.basket.capitalize}} {{t.base.was_created}}."
      to_be_reviewed: "{{t.base.basket.capitalize}} will now be {{t.base.reviewed}}, and you'll be notified of the outcome."
    destroy:
      destroyed: "{{t.base.basket.capitalize}} {{t.base.was_deleted}}."
    redirect_if_current_user_cant_add_or_request_basket:
      not_authorized: "{{t.base.you.capitalize}} need to have the right permissions to {{t.base.add}} or {{t.base.request}} a {{t.base.basket}}"
    update:
      feed_problem: "there was a problem {{t.base.adding}} {{t.base.your}} feeds. {{error}}"
      updated: "{{t.base.basket.capitalize}} {{t.base.was_updated}}."
    update_appearance:
      sanitized: "{{t.base.your.capitalize}} submitted footer {{t.base.content}} was {{t.base.changed}} for security reasons."
      updated: "{{t.base.basket.capitalize}} appearance was {{t.base.updated}}."
  baskets_helper:
    basket_preferences_inheritance_message:
      inheritance_notice: "These settings will be inherited by all other {{t.base.basket.pluralize}} unless they individually specify their own policy."
    show_all_fields_link:
      show_all_fields: "{{t.base.show}} {{t.base.all}} {{t.base.field.pluralize}}"
      show_allowed_fields: "{{t.base.show}} {{t.base.allowed}} {{t.base.field.pluralize}}"
  choice_model:
    must_be_unique: "must be unique"
    top_level: "(Top level)"
  choices_controller:
    label_example: "Label will be used as {{t.base.value}} if left blank."
    title: "{{t.base.choice.pluralize.capitalize}}"
  comments:
    edit:
      button: "{{t.base.save.capitalize}}"
      title: "{{t.base.editing.capitalize}} {{t.base.zoom_types.comment}}"
    form:
      description: "{{t.base.description.capitalize}}:"
      edit_comment: "{{t.base.zoom_types.comment.capitalize}} on this edit:"
      security_warning: "Note: {{t.base.form.pluralize}} and javascript are not {{t.base.allowed}} for security reasons."
      security_warning_admin: "Unless {{t.base.you}} check the box below."
      security_warning_exception: "{{t.base.allow.capitalize}} {{t.base.form.pluralize}} and other possible insecure elements and attributes in the HTML?"
      skip_email_notification: "Skip {{t.base.email}} notification to other {{role_type}} for this {{t.base.private}} {{t.base.zoom_types.comment}}?"
      tags: "{{t.base.tag.capitalize.pluralize}} (separated by commas)"
      tags_spinner: "Getting {{t.base.tag.pluralize}}. "
      title: "Title:"
    new:
      button: "{{t.base.save.capitalize}}"
      in_response_to: "In response to {{user_name}}"
      title: "{{t.base.new.capitalize}} {{t.base.zoom_types.discussion}}"
      view_original: "(view original)"
  comments_controller:
    destroy:
      destroyed: "{{t.base.zoom_types.comment.capitalize}} {{t.base.was_deleted}}."
    is_authorized:
      not_a_member: "Sorry, {{t.base.you}} need to be a {{t.base.member}} to leave a {{t.base.zoom_types.comment}} in this {{t.base.basket}}."
    update:
      updated: "{{t.base.zoom_types.comment.capitalize}} {{t.base.was_updated}}."
  configure:
    index:
      advanced_options: "Advanced Options"
      change_password: "{{t.base.you.capitalize}} should {{t.base.change}} the {{t.base.default}} {{t.base.administrator}} account's password. Leaving it as the {{t.base.default}} is a security risk."
      change_password_button: "{{t.base.change.capitalize}} {{t.base.password}}"
      change_settings: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.change}} system settings here.  {{t.base.you.capitalize}} will need to restart {{t.base.your}} server for changes to take effect."
      clear_cache: "Clear {{t.base.site.capitalize}} Cache"
      click_finish: "{{t.base.all.capitalize}} required settings have been fulfilled. If {{t.base.you}} are satisfied, {{t.base.please}} {{t.base.click}} the 'finish' button."
      click_to: "{{t.base.click.capitalize}} to"
      completed: "Completed. "
      final_step: "Final Configuration Step"
      finish_button: Finish
      finished_with_settings: "Finished with Settings?"
      install_missing_software: "Install missing software, restart {{t.base.your}} server, and reload this page to proceed."
      installation_complete: "Installation complete"
      link_site_later: "{{t.base.you.capitalize}} may do this later by visiting the {{t.layouts.application.toolbox_label}} and using the \"List {{t.base.site}} on Kete.net.nz\" link."
      missing_software: "Missing Software:"
      missing_software_gem: "{{gem_name}} gem"
      must_restart: "Before {{t.base.you}} continue, {{t.base.you}} must restart the kete application server and start backgroundrb!"
      prime_search_engine: "Prime {{t.base.search.capitalize}} Engine"
      regular_options: "Regular Options"
      reload_site: "Reload {{t.base.site.capitalize}}"
      restart_server: "Restart Server"
      search_engine: "{{t.base.search.capitalize}} Engine"
      search_engine_needs_bootstrapping: "<i>After you have restarted the server</i>, the {{t.base.search.capitalize}} Engine needs to have the initial {{t.base.content.pluralize}} of Kete {{t.base.added}} to it.  {{t.base.please.capitalize}} {{t.base.click}} 'Prime {{t.base.search.capitalize}} Engine' to continue."
      search_engine_not_complete: "Not yet complete."
      search_engine_primed: "{{t.base.search.capitalize}} Engine primed."
      security_title: "Security:"
      see_install_guide: "Refer to installation guide for details specific to the listed software."
      settings_description: "{{t.base.click.capitalize}} on section to fill out its settings."
      settings_title: Settings
      setup_search_engine: "set up {{t.base.search.capitalize}} Engine"
      setup_site: "Before {{t.base.your}} {{t.base.new}} {{t.base.site}} is ready, you'll need to fill out some details, {{t.base.change}} some passwords, restart {{t.base.your}} server, prime the {{t.base.search}} engine, and then reload this page."
      show: "{{t.base.show.capitalize}} {{show_link}}"
      show_only: "{{t.base.show.capitalize}} {{t.base.only}} {{show_link}}"
      site_configured: "Congratulations!  {{t.base.your.capitalize}} Kete {{t.base.site}} is configured and ready to be {{t.base.viewed}}. {{t.base.click.capitalize}} 'Reload {{t.base.site.capitalize}}' to move on to customising {{t.base.your}} Kete's {{t.base.content}} to suit."
      title: Configure
    link_to_site:
      already_listed: "Kete.net.nz already lists the {{t.base.site}}. {{t.base.you.capitalize}} can see details at {{listing_link}}."
      completed: "Completed. "
      description: "Would {{t.base.you}} like to send {{t.base.your}} {{t.base.site}} {{t.base.name}}, {{t.base.site}} url and a short description of {{t.base.your}} {{t.base.site}} for to a {{t.base.public}} list of Kete installations?"
      send_information: "Send Information"
      site_description: "{{t.base.site.capitalize}} description:"
      site_fields_optional: (optional)
      site_publisher_address: "Publisher Address:"
      site_publisher_address_description: "What is the physical address of the publisher or organisation this Kete installation is for?<br />Provide a full address (number, street name, town, country), or the region (town and country only)."
      title: "List {{t.base.your}} {{t.base.site}} on Kete.net.nz (optional)"
    section:
      cancel: "{{t.base.cancel.capitalize}}"
      save: "{{t.base.save.capitalize}}"
    settings_complete:
      next: "If {{t.base.you}} are satisfied with {{t.base.your}} settings, {{t.base.please}} {{t.base.click}} the 'Next' button."
      next_buton: Next
      restart: "System Settings modified. {{t.base.please.capitalize}} restart the server for them to take effect."
      title: "{{t.base.all.capitalize}} required settings are complete."
    zoom_dbs_edit:
      password: "{{t.base.password}}:"
      password_example: "{{t.base.please.capitalize}} set a {{t.base.new}} {{t.base.password}} to connect to this {{t.base.search.capitalize}} Engine.  Leaving it the {{t.base.default}} is a security risk."
      password_required: "{{t.base.password}} is required"
      port: "Port:"
      port_advanced_note: "Advanced: Unless you run more than one Kete {{t.base.site}} on {{t.base.your}} host, it is safe to leave this as the {{t.base.default}}. Otherwise, you will want to check what ports any other {{t.base.search.capitalize}} Engines (Zebra servers) are already running on and {{t.base.change}} this to a {{t.base.new}} port."
      save: "{{t.base.save.capitalize}}"
      search_engine_database: "{{t.base.search.capitalize}} Engine Database:"
      security: "Security:"
  configure_controller:
    clear_cache:
      cache_cleared: "The {{t.base.site}} cache was cleared {{t.base.successfully}}."
      problem_clearing_cache: "There was a problem clearing this site's cache. {{t.base.please.capitalize}} do it manually."
    done_with_settings:
      not_yet_completed: "Not yet completed."
    get_site_linking_progress:
      incorrect_fields: "Some {{t.base.field.pluralize}} were incorrect:"
      site_registered: "{{t.base.your.capitalize}} Kete installation {{t.base.has_been}} {{t.base.registered}}. {{t.base.thank_you}}.<br />{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the whole directory of Kete {{t.base.site.pluralize}} at <a href='{{kete_sites_link}}'>{{kete_sites_link}}</a>."
    prime_zebra:
      primed_zebra: "{{t.base.search.capitalize}} Engine {{t.base.has_been}} primed."
    restart_server:
      problem_restarting: "There was a problem restarting the server. {{t.base.please.capitalize}} do it manually."
      server_restarted: "The server {{t.base.has_been}} restarted"
    send_information:
      already_running: "There is already a {{t.base.site}} registration worker active. Wierd! Try refreshing the page."
  content_types:
    available_fields_form:
      add_button: "{{t.base.add.capitalize}} to {{t.base.content_type.capitalize}}"
      multiple: (multiple)
      none_available: "No {{t.base.form}} {{t.base.field.pluralize}} are available."
      optional: (optional)
      required: (required)
      title: "Available {{t.base.form.capitalize}} {{t.base.field.pluralize.capitalize}}"
    current_fields:
      delete: "{{t.base.delete.capitalize}}"
      embedded: "display under {{t.base.description}}?"
      multiple: (multiple)
      none_mapped: "No {{t.base.form}} {{t.base.field.pluralize}} currently mapped to this {{t.base.content_type}}."
      private_only: "{{t.base.private}} {{t.base.only}}?"
      required: required?
      title: "Current {{t.base.form.capitalize}} {{t.base.field.pluralize.capitalize}}"
      update_fields: "{{t.base.update.capitalize}} {{t.base.form}}"
    edit:
      return_to_content_types: "Return to {{t.base.content_type.pluralize}}"
      title: "{{t.base.editing.capitalize}} {{t.base.content_type}}: {{controller}}"
    form:
      class_name: "Class {{t.base.name.capitalize}}"
      controller: Controller
      description: Description
      humanize: Humanized
      humanized_plural: "Humanized Plural"
      note: "These are technical specifications and should not be {{t.base.edited}} unless you understand what they do."
    generic_fields:
      description_field: "Description: Describe the {{t.base.content}}."
      note: "{{t.base.all.capitalize}} {{t.base.content_type.pluralize}} have the following {{t.base.field.pluralize}} to start:"
      present_in_all: "These {{t.base.form}} {{t.base.field.pluralize}} will be present in {{t.base.all}} {{t.base.content_type.pluralize}}."
      short_summary_field: "Short Summary: This is a brief blurb suitable for lists of results.  It should be plain text."
      title: "Generic {{t.base.content.capitalize}} {{t.base.field.pluralize}}"
      title_field: "Title: What should we call this {{t.base.content}}?"
    list:
      controller: Controller
      description: Description
      edit: "{{t.base.edit.capitalize}}"
      options: Options
      title: "Listing {{t.base.content_type.pluralize}}"
      type: "{{t.base.type.capitalize}}"
    new:
      cancel: "{{t.base.cancel}}"
      create: "{{t.base.create.capitalize}}"
      title: "{{t.base.new.capitalize}} {{t.base.content_type}}"
    show:
      back: Back
      edit: "{{t.base.edit.capitalize}}"
  date:
    abbr_day_names:
      - Sun
      - Mon
      - Tue
      - Wed
      - Thu
      - Fri
      - Sat
    abbr_month_names:
      - ~
      - Jan
      - Feb
      - Mar
      - Apr
      - May
      - Jun
      - Jul
      - Aug
      - Sep
      - Oct
      - Nov
      - Dec
    day_names:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    formats:
      default: "%Y-%m-%d"
      long: "%B %d, %Y"
      short: "%b %d"
    month_names:
      - ~
      - January
      - February
      - March
      - April
      - May
      - June
      - July
      - August
      - September
      - October
      - November
      - December
    order:
      - !ruby/symbol year
      - !ruby/symbol month
      - !ruby/symbol day
  datetime:
    distance_in_words:
      about_x_hours:
        one: "about 1 hour"
        other: "about {{count}} hours"
      about_x_months:
        one: "about 1 month"
        other: "about {{count}} months"
      about_x_years:
        one: "about 1 year"
        other: "about {{count}} years"
      half_a_minute: "half a minute"
      less_than_x_minutes:
        one: "less than a minute"
        other: "less than {{count}} minutes"
      less_than_x_seconds:
        one: "less than 1 second"
        other: "less than {{count}} seconds"
      over_x_years:
        one: "over 1 year"
        other: "over {{count}} years"
      x_days:
        one: "1 day"
        other: "{{count}} days"
      x_minutes:
        one: "1 minute"
        other: "{{count}} minutes"
      x_months:
        one: "1 month"
        other: "{{count}} months"
      x_seconds:
        one: "1 second"
        other: "{{count}} seconds"
    prompts:
      day: Day
      hour: Hour
      minute: Minute
      month: Month
      second: Seconds
      year: Year
  dir: ltr
  document_model:
    not_acceptable_content_type: "is {{t.base.not_acceptable}}. It should be a .pdf, .doc, or other {{t.base.zoom_types.document}} file."
    not_acceptable_size: "{{t.base.not_acceptable_size}}"
  documents:
    details:
      filename: "Filename:"
      not_available: "{{t.base.not_available}} for download"
      replace_description: "{{t.base.replace.capitalize}} {{t.base.description}} with {{t.base.zoom_types.document}} text"
      size: "Size:"
      type: "{{t.base.zoom_types.document.capitalize}} {{t.base.type}}:"
    edit:
      not_authorized: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
  documents_controller:
    convert:
      converted: "{{t.base.zoom_types.document.capitalize}} {{t.base.description}} {{t.base.was_updated}} with text of uploaded document."
      not_converted: "There were problems converting the text of the uploaded {{t.base.zoom_types.document}} to the document's {{t.base.description}}.  {{t.base.please.capitalize}} {{t.base.edit}} the {{t.base.description}} manually."
    make_theme:
      made_theme: "{{t.base.zoom_types.document.capitalize}} expanded to be {{t.base.new}} theme."
    update:
      updated: "{{t.base.zoom_types.document.capitalize}} {{t.base.was_updated}}."
  email:
    contact:
      send: Send
      title: "{{t.base.contact.capitalize}} {{recipient}}"
    contact_form:
      email_shared: "Note: {{t.base.your.capitalize}} {{t.base.email}} address will be shown to the person/people who receive this email."
      message: "Message:"
      subject: "Subject:"
  email_controller_lib:
    redirect_if_contact_form_disabled:
      not_enabled: "This {{t.base.contact}} {{t.base.form}} is not currently {{t.base.enabled}}."
    send_email:
      email_sent: "{{t.base.your.capitalize}} {{t.base.email}} {{t.base.has_been}} {{t.base.sent}}. You will receive the reply in {{t.base.your}} {{t.base.email}} box."
      need_subject_and_message: "Both subject and message must be filled in. {{t.base.please_try_again.capitalize}}."
  errors:
    backgroundrb_connection_failed:
      body: |-
          <h2>500 Error!</h2>
          <p>Oops! There wasn't an available BackgroundRB process available to handle your request.</p>
          <p>This could be because BackgroundRB was not started or is offline for maintenance.</p>
          <h3>What now?</h3>
          <p>Try pressing the back button in your browser. Then try to do whatever you were doing again.</p>
          <h3>Still getting this error?</h3>
          <p>Sorry about that. You can either try again a bit later on or help us out by reporting the problem.</p>
          <p>Please send an email via the "{{t.layouts.application.contact}}" link at the top of the page.</p>
          <p>Include details about what you were trying to do.</p>
          <p><span style="font-weight: bold;">Example </span></p>
          <p>"I was trying to {{t.base.import}} a set of {{t.base.zoom_types.topic.pluralize}} using the Simple XML importer and I got this error."</p>
          <p>Please include the URL of the page that gave you the error. The URL is in the address bar of your browser and will start with http://. Please include the entire URL.</p>
          <p><span style="font-weight: bold;">Example</span></p>
          <p>http://horowhenua.kete.net.nz/site/topics/show/44</p>
          <h3>Thanks and once again sorry for the inconvenience. </h3>
    error404:
      body: |-
          <h2>404 Error!</h2>
          <p>Oops! You have encountered an error in this site. A 404 error means that that the {{t.base.content}} you were after could not be found.</p>
          <p>This could be a broken link or a symptom of another problem.</p>
          <h3>What now?</h3>
          <p>Try pressing the back button in your browser. Then try to do whatever you were doing again.</p>
          <h3>Still getting this error?</h3>
          <p>Sorry about that. You can either try again a bit later on or help us out by reporting the problem.</p>
          <p>Please send an email via the "{{t.base.contact.capitalize}}" link at the top of the page.</p>
          <p>Include details about what you were trying to do.</p>
          <p><span style="font-weight: bold;">Example </span></p>
          <p>"I was trying to find information on Foxton Beach. I typed 'Foxton Beach' into the {{t.base.search}} and got a number of results. When I clicked on the result "Foxton Beach" I got this error."</p>
          <p>Please include the URL of the page that gave you the error. The URL is in the address bar of your browser and will start with http://. Please include the entire URL.</p>
          <p><span style="font-weight: bold;">Example</span></p>
          <p>http://horowhenua.kete.net.nz/site/topics/show/44</p>
          <h3>Thanks and once again sorry for the inconvenience. </h3>
    error500:
      body: |-
          <h2>500 Error!</h2>
          <p>Oops! An error has prevented this page from loading.</p>
          <p>It has been logged and will be looked into by a system {{t.base.administrator.capitalize}} shortly.</p>
          <h3>What now?</h3>
          <p>Hit the Back button on your browser to return to the page you were on.</p>
    error500js:
      response_is_500: "Response returned an Error 500. Please check the logs."
    invalid_authenticity_token:
      body: |-
          <h2>Invalid Authenticity Token!</h2>
          <p>Oops! It seems your session has expired and caused your authenticity token to become invalid.</p>
          <p>This could be because you've returned to a page that was cached by your browser (containing the old token).</p>
          <h3>What now?</h3>
          <p>You can try fix this by doing one of the following:</p>
          <ol>
            <li>Clear your browsers cache and reload the page.</li>
            <li>Logout and back into this site, then try again.</li>
          </ol>
          <h3>Still getting this error?</h3>
          <p>Sorry about that. You can either try again a bit later on or help us out by reporting the problem.</p>
          <p>Please send an email via the "{{t.base.contact.capitalize}}" link at the top of the page.</p>
          <p>Include details about what you were trying to do.</p>
          <p><span style="font-weight: bold;">Example </span></p>
          <p>"I was trying to edit the topic 'Introduction' and I got the Authenticity Token problem."</p>
          <p>Please include the URL of the page that gave you the error. The URL is in the address bar of your browser and will start with http://. Please include the entire URL.</p>
          <p><span style="font-weight: bold;">Example</span></p>
          <p>http://horowhenua.kete.net.nz/site/topics/show/44</p>
          <h3>Thanks and once again sorry for the inconvenience. </h3>
    invalid_authenticity_token_js:
      body: "Invalid Authenticity Token. Reload the page and try again."
    zebra_connection_failed:
      body: |-
          <h2>500 Error!</h2>
          <p>Oops! Zebra {{t.base.failed}} to connect to get the information you {{t.base.requested}}.</p>
          <p>This could be because Zebra is not started, or is currently offline for maintenance.</p>
          <h3>What now?</h3>
          <p>Try pressing the back button in your browser. Then try to do whatever you were doing again.</p>
          <h3>Still getting this error?</h3>
          <p>Sorry about that. You can either try again a bit later on or help us out by reporting the problem.</p>
          <p>Please send an email via the "{{t.base.contact.capitalize}}" link at the top of the page.</p>
          <p>Include details about what you were trying to do.</p>
          <p><span style="font-weight: bold;">Example </span></p>
          <p>"I was trying to find information on Foxton Beach. I typed 'Foxton Beach' into the {{t.base.search}} and got this error."</p>
          <p>Please include the URL of the page that gave you the error. The URL is in the address bar of your browser and will start with http://. Please include the entire URL.</p>
          <p><span style="font-weight: bold;">Example</span></p>
          <p>http://horowhenua.kete.net.nz/site/topics/show/44</p>
          <h3>Thanks and once again sorry for the inconvenience.</h3>
  extended_content_controller_lib:
    ensure_no_new_insecure_elements_in:
      contains_new_elements: "contains {{count}} {{t.base.new}} insecure elements but you're not authorized to {{t.base.add}} them."
      contains_new_elements_admin: "contains {{count}} {{t.base.new}} insecure elements and you forgot to check the 'do not sanitize' checkbox."
  extended_content_lib:
    validate_extended_checkbox_field_content:
      must_be_valid: "{{label}} must be a {{t.base.valid}} checkbox {{t.base.value}} (Yes or No)"
    validate_extended_choice_field_content:
      must_be_valid: "{{label}} must be a {{t.base.valid}} {{t.base.choice}}"
    validate_extended_content_multiple_values:
      need_at_least_one: "{{label}} must have at least one {{t.base.value}}"
    validate_extended_content_single_value:
      cannot_be_blank: "{{label}} {{t.base.cannot_be}} blank"
    validate_extended_date_field_content:
      must_be_valid: "{{label}} must be in the standard date format (YYYY-MM-DD)"
    validate_extended_topic_type_field_content:
      must_be_valid: "{{label}} found the topic, but it is not a {{t.base.type}} of {{topic_type}}, nor one of it's sub-{{t.base.type.pluralize}}."
      no_such_topic: "{{label}} couldn't find the topic. Must be in the format of '{{t.base.zoom_types.topic}} title (URL)?'"
    validate_extended_year_field_content:
      must_be_valid: "{{label}} must be in the standard year format (YYYY)"
      not_a_hash: "{{label}} data expected to be Hash, but was {{class}} containing {{value}}. Why?"
  extended_field_model:
    already_used: ": labels of {{invalid_label_names}} {{t.base.arent}} {{t.base.allowed}} because they already used be {{t.base.default}}"
    invalid_chars: ": the following characters {{t.base.arent}} {{t.base.allowed}} - {{invalid_chars}}"
    label_cant_have: "{{t.base.cannot}} be Form, Script, or Input because they are reserved words"
    no_spaces: ": spaces {{t.base.arent}} {{t.base.allowed}}"
  extended_fields:
    choice_autocomplete_editor:
      sub_setting: " Sub-{{field_name}}: "
    choice_select_editor:
      sub_setting: " Sub-{{field_name}}: "
  extended_fields_controller:
    available_choices: "Available {{t.base.choice.pluralize}}"
    available_choices_description: "Ftype must be a \"{{t.base.choice.pluralize}}\" option for these options to be available to {{t.base.user.pluralize}}."
    base_url: "Base URL"
    base_url_description: "Whatever the {{t.base.user}} inputs will be appended to this base url (e.g. http://site.com/~[user_input]).</p><p>&nbsp;</p><p><b>NOTE:</b> in the case of any of the {{t.base.choice}} ftypes, Base URL + {{t.base.value}} will take over from normal linking to all results that match the {{t.base.value}} for the {{t.base.choice}} for the extended field. In the case of Location on map ftypes, supplying a base url will link the coordinates on display to the url, appending an ll (latitude/longitude) and z (zoom level) parametres (for ease of use with Google Maps - configurable in config/google_map_api.yml)"
    circa: "{{t.base.accept.capitalize}} Circa?"
    circa_description: "Ftype must be the \"Year\" option for this option to appear."
    import_synonyms_description: "{{t.base.new.capitalize}} line seperated list of {{t.base.import}} synonyms."
    title: "Extended Fields"
    topic_type_choices: "{{t.base.zoom_types.topic.capitalize}} {{t.base.type.capitalize}} {{t.base.choice.pluralize.capitalize}}"
    topic_type_choices_description: "Ftype must be a \"Pre-populated {{t.base.choice.pluralize.capitalize}} ({{t.base.topic_type}})\" option for these options to be available to {{t.base.user.pluralize}}."
  extended_fields_helper:
    additional_extended_field_control:
      add_another: "{{t.base.add.capitalize}} another {{field_name}}"
    children_form_column:
      need_choice_for_children: "{{t.base.you.capitalize}} {{t.base.cannot}} select child {{t.base.choice.pluralize}} until the {{t.base.choice}} {{t.base.has_been}} {{t.base.created}}."
      add_more_sub_choices: "{{t.base.add}} more sub-{{t.base.choice.pluralize}}"
      existing_sub_choices: "{{t.base.existing.capitalize}} sub-{{t.base.choice.pluralize}}"
    extended_field_choice_autocomplete_editor:
      getting_choices: "Getting {{t.base.choice.pluralize}}. "
    extended_field_choice_select_editor:
      getting_choices: "Getting {{t.base.choice.pluralize}}. "
      suggest_a: "OR suggest a {{field_name}}"
    extended_field_radio_editor:
      no: "No"
      no_value: "No {{t.base.value}}"
      yes: "Yes"
    extended_field_topic_type_editor:
      checking_value: "Checking {{t.base.value}}. "
      getting_topics: "Getting {{t.base.zoom_types.topic.pluralize}}. "
      invalid_value: "This is not a {{t.base.valid}} {{t.base.zoom_types.topic}} {{t.base.value}}. "
      valid_value: "This is a {{t.base.valid}} {{t.base.zoom_types.topic}} {{t.base.value}}. "
    ftype_form_column:
      cannot_be_changed: "({{t.base.cannot_be_changed}})"
      check_box: "Check box"
      choices_auto_complete: "{{t.base.choice.pluralize.capitalize}} (auto-completion)"
      choices_drop_down: "{{t.base.choice.pluralize.capitalize}} (drop-down)"
      choices_topic_type: "Pre-populated {{t.base.choice.pluralize.capitalize}} ({{t.base.topic_type}})"
      date: Date
      location_map: "Location on map (lat/lng coordinates)"
      location_map_address: "Location on map with address"
      radio_button: "Radio buttons"
      text: Text
      text_box: "Text box"
      year: Year
    label_form_column:
      cannot_be_changed: "({{t.base.cannot_be_changed}})"
    multiple_form_column:
      cannot_be_changed: "({{t.base.cannot_be_changed}})"
    parent_form_column:
      need_choice_for_parent: "{{t.base.you.capitalize}} cannot select a parent {{t.base.choice}} until the {{t.base.choice}} {{t.base.has_been}} {{t.base.created}}."
    pseudo_choices_form_column:
      allow_user_choices: "{{t.base.allow.capitalize}} {{t.base.user}} addition of {{t.base.choice.pluralize}}?"
      allow_user_choices_no: "No"
      allow_user_choices_yes: "Yes"
      collapse_all: "Collapse {{t.base.all}}"
      expand_all: "Expand {{t.base.all}}"
      link_choice_values: "{{t.base.choice.capitalize}} values are links to all other {{t.base.item.pluralize}} with the same value for that field?"
      link_choice_values_no: "No"
      link_choice_values_yes: "Yes"
  field_mappings_controller:
    create:
      created: "{{item_class}} {{t.base.was_created}}."
    destroy:
      destroyed: "{{item_class}} {{t.base.was_deleted}}."
    remove_mapping:
      being_used: "The {{field_label}} mapping is in use by this {{item_class}} or its descendants and {{t.base.cannot_be}} {{t.base.deleted}}."
      removed: "The {{field_label}} mapping {{t.base.has_been}} {{t.base.deleted}}."
    update:
      updated: "{{item_class}} {{t.base.was_updated}}."
  flagging_controller_lib:
    flag_version:
      item_flagged: "{{t.base.thank_you}} for {{t.base.your}} input.  A {{t.base.moderator}} {{t.base.has_been}} notified and will {{t.base.review}} the {{t.base.item}} in question. The {{t.base.item}} {{t.base.has_been}} reverted to a non-contested version for the time being."
    preview:
      no_public: "There is currently no {{t.base.public}} version of this {{controller}} available."
    reject:
      rejected: "This {{t.base.version}} of this {{zoom_class}} {{t.base.has_been}} {{t.base.rejected}}.  The {{t.base.user}} who submitted the revision will be notified by email."
    restore:
      approved: "The {{t.base.content}} of this {{zoom_class}} {{t.base.has_been}} {{t.base.approved}} {{t.base.from}} the selected revision."
      made_live: "{{t.base.your.capitalize}} {{t.base.contribution}} to {{site_name}} in {{basket_name}} {{t.base.has_been}} {{t.base.made}} the live version."
      missing_details: "The version you're reverting to is missing some compulsory {{t.base.content}}. {{t.base.please.capitalize}} {{t.base.contribute}} the missing details before continuing. You may need to {{t.base.contact}} the original author to collect additional information."
      version_comment: "{{t.base.content.capitalize}} {{t.base.from}} revision # {{version}}."
    review:
      reviewed: "This {{t.base.version}} of the {{zoom_class}} {{t.base.has_been}} marked as {{t.base.reviewed}}."
  google_map_lib:
    extended_field_map_editor:
      address: "Address:"
      lat_lng: "Latitude and Longitude coordinates:"
      need_exact_data: "This feature requires exact data to function properly."
      need_javascript: "javascript needs to be on to use Google Maps"
      no_location: "don't record a location"
      show_lat_lng: "{{t.base.show.capitalize}} Latitude/Longitude"
      zoom_lvl: "Zoom level for map:"
    load_google_map_api:
      accuracy: "Accuracy:"
      address: "Address:"
      correct_location: "Is this the correct location?"
      correct_location_yes: "Yes, it is."
      country_code: "Country {{t.base.code}}:"
      fields_dont_exist: "ERROR: The {{t.base.field.pluralize}} for latitude, longitude, zoom level and address don't exist on the page. Debug this!"
      hide_lat_lng: "{{t.base.hide.capitalize}} Latitude/Longitude"
      lat_lng_not_floats: "ERROR: One of latitude, longitude, or zoom level are not of the correct type. Debug this!"
      lat_lng_not_set: "ERROR: One of latitude, longitude, or zoom level has not been set. Debug this!"
      non_existant_div: "You are trying to initiate the google map api on a non-existant div. Debug this!"
      not_close_enough: "Error: The marker was not close enough to a<br />road to determine the street address. {{t.base.please_try_again.capitalize}}."
      not_compatible: "Google Maps is not compatible with this browser. Try using Firefox 3, Internet Explorer 7, or Safari 3."
      show_lat_lng: "{{t.base.show.capitalize}} Latitude/Longitude"
      something_went_wrong: "Error: Something has happened. {{t.base.please_try_again.capitalize}}."
      something_went_wrong_602: "Error: Something has happened.<br />Google Maps cannot determine the location where you placed the marker.<br />Try repositioning it nearer to a road."
    validate_extended_map_field_content:
      not_a_hash: "is not an hash containing zoom_lvl, no_map, coords, and optional address. Currently {{class}} {{value}}. Why?"
      not_present_optional: "is not present. If you don't want to include one, select 'don't record a location'."
      not_present_required: "is not present. This {{t.base.field}} is required so you must {{t.base.enter}} something before saving."
      wrong_format: "is not in the right format (zoom (>=0), coords (lat,lng), no_map (0|1), address (string)). Currently {{class}} {{value}}. Why?"
  has_contributors_lib:
    submitter_of:
      data_corruption: "Possible data corruption. You should consider running rake kete:repair."
      no_contributor: "It looks like there is no {{t.base.contributor}} associated with version {{version}} of {{item_class}} {{item_id}}."
  image_file_model:
    not_acceptable_content_type: "is {{t.base.not_acceptable}}. It should be a .jpg, .gif, or other {{t.base.zoom_types.image}} file."
    not_acceptable_size: "{{t.base.not_acceptable_size}}"
    unparsable_content_type: "{{t.base.was}} {{t.base.accepted}}, but Kete had difficulty extracting the height and width of the {{t.base.zoom_types.image}}. {{t.base.please.capitalize}} try a different {{t.base.zoom_types.image}} format."
  images:
    details:
      filename: "Original Filename:"
      not_available: "{{t.base.not_available}} for download"
      size: "Original Size:"
      type: "Original {{t.base.zoom_types.image.capitalize}} {{t.base.type.capitalize}}:"
      view: "{{t.base.view}}"
    edit:
      not_authorized: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
    image_file:
      large: Large
      medium: Medium
      only_original_available: "{{t.base.only.capitalize}} available as original."
      original: Original
      small: Small
      small_sq: Thumbnail
    portrait_controls:
      add_image: "{{t.base.add.capitalize}} {{t.base.zoom_types.image}} to {{t.base.portrait.pluralize}}"
      make_selected: "Make {{t.base.zoom_types.image}} selected {{t.base.portrait}}"
      other_portraits: "Other {{t.base.portrait.pluralize.capitalize}}"
      remove_image: "{{t.base.remove.capitalize}} {{t.base.zoom_types.image}} {{t.base.from}} {{t.base.portrait.pluralize}}"
      title: "{{t.base.portrait.capitalize}} Controls"
      whats_this: "{{t.base.whats_this}}"
    show:
      caption: Caption
  images_controller:
    update:
      updated: "{{t.base.zoom_types.image.capitalize}} {{t.base.was_updated}}."
  import_model:
    invalid_chars: ": the following characters {{t.base.arent}} {{t.base.allowed}} - {{invalid_chars}}"
    must_be_seconds: "the interval must be in seconds"
  importer_lib:
    do_work:
      in_progress: "in progress"
    importer_prepare_extended_field:
      not_available: "{{t.base.not_available}}"
    importer_process:
      already_have_record: "kete already {{t.base.has}} a copy of this record"
    importer_update_processing_vars_at_end:
      failed_status: "{{t.base.failed}}"
      import_failed: "{{t.base.import.capitalize}} {{t.base.failed}}. "
      import_successful: "{{t.base.import.capitalize}} {{t.base.was}} {{t.base.successful}}."
    importer_update_processing_vars_if_rescue:
      failed_status: "{{t.base.failed}}"
  importers:
    choose_contributing_user:
      choose: "{{t.base.choose.capitalize}}"
      no_user_found: "No potential {{t.base.contributing}} {{t.base.user}} found."
      title: "{{t.base.choose.capitalize}} {{t.base.contributing.capitalize}} {{t.base.user.capitalize}}"
    common_import_fields:
       imported_items_privacy: "{{t.base.imported.capitalize}} {{t.base.item.pluralize.capitalize}} {{t.base.privacy.capitalize}}"
       imported_items_privacy_example: "Every {{t.base.item}} in this {{t.base.import}} will be created with this {{t.base.privacy}} setting."
       description_template_end: "End Description Template (good for including an attribution)"
       description_template_end_description: "Should we append an piece of text formatted in HTML to the end of the description of each piece of {{t.base.content}} that is {{t.base.created}} during this {{t.base.import}}?  An example would be \"&lt;p&gt;Any use of this {{t.base.zoom_types.image}} must be accompanied by the credit 'Horowhenua Historical Society Inc.'&lt;\\p&gt;\".  Useful for including an attribution for the source of the {{t.base.imported}} {{t.base.item}}."
       description_template_start: "Beginning Description Template"
       description_template_start_description: "A piece of HTML that will go at the start of every description during this {{t.base.import}}."
       private: "{{t.base.private.capitalize}}"
       private_description: "({{t.base.can_be_viewed.capitalize}} {{t.base.only}} {{t.base.by}} {{t.base.basket}} {{t.base.member.pluralize}})"
       public: "{{t.base.public.capitalize}}"
       public_description: "({{t.base.can_be_viewed.capitalize}} {{t.base.by}} {{t.base.everyone}})"
       downloaded_by_everyone: "{{t.base.can_be_downloaded.capitalize}} {{t.base.by}} {{t.base.everyone}}"
       downloaded_by_role: "{{t.base.can.capitalize}} {{t.base.only}} be {{t.base.downloaded}} {{t.base.by}} people who have {{role_name}} access."
       imported_items_file_privacy: "Imported Items Attached file privacy"
       imported_items_file_privacy_example: "{{t.base.please.capitalize}} note that once {{t.base.public}}, an attached file {{t.base.cannot_be}} {{t.base.made}} {{t.base.private}}."
       tags: "What {{t.base.tag.pluralize}} should we {{t.base.add}} to each {{t.base.imported}} {{t.base.item}} (separated by commas)?"
       tags_description: "These {{t.base.tag.pluralize}} will be {{t.base.added}} to every {{t.base.item}} in the {{t.base.import}} in addition to whatever is specified as a {{t.base.tag}} per record."
    contributing_user_form:
      current_choice: "Current {{t.base.choice}}:"
      new_user: "or {{t.base.new}} {{t.base.contributing}} {{t.base.member}}:"
      search: "{{t.base.search.capitalize}}"
      self: Self
      title: "{{t.base.choose.capitalize}} someone to be {{t.base.contributor}} of {{t.base.imported}} {{t.base.item.pluralize}}"
    create:
      completed: "Completed. "
      in_progress: "...in progress."
      starting_import: "Starting {{t.base.import}}..."
      stop_early: "Stop {{t.base.import.capitalize}} Early"
      title: "{{t.base.import.capitalize}} {{t.base.from}} {{location}}"
    list:
      as_of: "as of"
      description: "This is the {{t.base.import}} facility. Using it you can {{t.base.import}} {{t.base.content}} into this {{t.base.basket}} that {{t.base.has_been}} exported {{t.base.from}} supported systems such as Past Perfect."
      folder: Folder
      no_past_imports: "No previous {{t.base.import.pluralize}} have been run in this {{t.base.basket}}."
      records_processed: "Records Processed"
      start_new: "Start {{t.base.new}} {{t.base.import}}"
      started: Started
      status: Status
      title: "{{t.base.import.pluralize.capitalize}}"
      type: "{{t.base.type.capitalize}}"
      user: "{{t.base.user.capitalize}}"
    new:
      applicable_related_topic_type: "{{t.base.related.capitalize}} {{t.base.zoom_types.topic.capitalize}}'s {{t.base.topic_type.capitalize}}?"
      applicable_related_topic_type_description: "In what {{t.base.type}} of {{t.base.zoom_types.topic}} will we find {{t.base.existing}} {{t.base.zoom_types.topic.pluralize}} that the {{t.base.imported}} record should be {{t.base.related}} to?"
      applicable_topic_type: "Applicable {{t.base.topic_type.capitalize}}?"
      applicable_topic_type_description: "If this is an {{t.base.zoom_types.image}} {{t.base.import}}, such as Past Perfect, than what's the {{t.base.name}} of the {{t.base.topic_type.capitalize}} of the {{t.base.new}} {{t.base.zoom_types.topic}} for groups of {{t.base.related}} {{t.base.item.pluralize}} (e.g. 'Archive', 'Collection', 'Album')? If this is a text only {{t.base.import}} such as FMPDSORESULT, than this is the {{t.base.topic_type.capitalize}} of {{t.base.new}} {{t.base.zoom_types.topic}} that is {{t.base.created}}."
      applicable_zoom_class: "Applicable {{t.base.item.capitalize}} {{t.base.type.capitalize}}?"
      applicable_zoom_class_description: "What {{t.base.type}} of {{t.base.item}} should we create per row?"
      audio: "{{t.base.zoom_types.audio.capitalize}}"
      consult_guides: "Before proceeding you will want to consult the appropriate guide for your Import Type on <a href=\"http://kete.net.nz\">Kete.net.nz</a>."
      conventions_note: "To start an {{t.base.import}}, you must follow several conventions."
      delay_between_records: "How long should we wait in seconds between processing records?"
      delay_between_records_explaination: "To protect against an {{t.base.import}} overwhelming your server's resources and affecting the response time of your website, we recommend an interval between processing each record.  If your server has a lot of computing power, feel free to lower this number or even put in '0'."
      dfc_xml: "DFC XML"
      document: "{{t.base.zoom_types.document.capitalize}}"
      excel_based: "Excel based"
      extended_field_that_contains_record_identifier: "Extended Field containing each Records Identifier?"
      extended_field_that_contains_record_identifier_description: "Which extended field is configured the store the above Record Identifier?"
      extended_field_that_contains_related_topics_reference: "Extended Field containing the related items record identifier?"
      extended_field_that_contains_related_topics_reference_description: "Which extended field is configured to store the record identifier of the related record?"
      filemaker_pro: "Filemaker Pro's FMPDSORESULT XML format (text records only, no associated images)"
      has_related_items_in_data: "Should records that refer to {{t.base.existing}} {{t.base.zoom_types.topic.pluralize}} have {{t.base.relation.pluralize}} added to those {{t.base.zoom_types.topic.pluralize}}?"
      image: "{{t.base.zoom_types.image.capitalize}}"
      import_button: "{{t.base.import.capitalize}}"
      import_type: "{{t.base.import_type.capitalize}}?"
      past_perfect: "Past Perfect 4"
      record_identifier_xml_field: "XML Field containing Record Identifier:"
      record_identifier_xml_field_description: "Which field in the {{t.base.import}} data contains an identifier unique to each record? Using this helps to prevent duplicate records. If left blank, the {{t.base.importer}} will use its default record identifier field. If it doesn't have one, some {{t.base.item.pluralize}} with the same title may be skipped during {{t.base.import}}."
      related_topic_type_all: "({{t.base.any}} {{t.base.topic_type}})"
      related_topics_reference_in_record_xml_field: "{{t.base.related.capitalize}} {{t.base.zoom_types.topic.pluralize.capitalize}} reference XML Field(s):"
      related_topics_reference_in_record_xml_field_description: "Which field in the import data contains a comma separated list of {{t.base.zoom_types.topic}} record identifiers that indicates a relationship between the imported record and an {{t.base.existing}} {{t.base.zoom_types.topic}}? If several exist, seperate them with commas. If not provided and the importer doesn't specify one itself, no {{t.base.relation.pluralize}} will be {{t.base.created}}."
      simple_xml: "Simple XML"
      title: "{{t.base.new.capitalize}} {{t.base.import.capitalize}}"
      topic: "{{t.base.zoom_types.topic.capitalize}}"
      video: "{{t.base.zoom_types.video.capitalize}}"
      what_is_folder_name: "What is the {{t.base.name}} of your folder under the imports directory?"
      xml_path_to_records: "XML Path to Record:"
      xml_path_to_records_description: "What is the XML element path that specifies each record? For example 'Root/Record'.  For RSS 2.0, this would be 'rss/channel/{{t.base.item}}'."
    new_related_set_from_archive_file:
      add_related: "{{t.base.add.capitalize}} {{t.base.related.capitalize}} {{t.base.item.capitalize.pluralize}}"
      archive_limit: "The largest archive file you may upload is {{size}}.  You may want to scale down {{t.base.your}} {{t.base.item.pluralize}} to be more reasonable sized to {{t.base.add}} to the {{t.base.site}} and re{{t.base.create}} {{t.base.your}} archive file."
      edit_after_import: "Alternatively, {{t.base.you}} may also {{t.base.edit}} {{t.base.any}} uploaded {{t.base.item}}'s title or other details after it {{t.base.has_been}} {{t.base.added}} to the {{t.base.site}}."
      folder_containing_items: "The archive file should be of a folder containing the {{t.base.item.pluralize}} to be {{t.base.added}}.  {{t.base.please.capitalize}} do not uses spaces in the folder {{t.base.name}} and {{t.base.name}} the archive file after the folder.  For example \"the_images\" folder would become the \"the_images.zip\" archive file."
      title: "{{t.base.add.capitalize}} {{t.base.related}} set of {{t.base.item.pluralize}} to {{related_topic_title}} {{t.base.from}} uploaded archive file"
      title_from_filename: "The title for the uploaded {{t.base.item.pluralize}} will be based on the file's {{t.base.name}} as it was before it was {{t.base.added}} to the compressed archive file.  If you want a different title for the {{t.base.item}} you may to rename the file in question and re{{t.base.create}} the archive file before you proceed."
      title_from_metadata: "If the title is in an {{t.base.item}}'s embedded metadata it will be used as long as it is labeled 'Title' or one of the following:"
      title_from_metadata_or: OR
      upload: "Upload Archive file:"
      upload_description: "A .zip, .tar, or .tar.gz file that contains all the {{t.base.item.pluralize}}."
      uploading_note: "Some things to keep in mind when uploading a batch of {{t.base.item.pluralize}} in a .zip, .tar, .gz, or other archive file:"
      whats_the_upload: "What are {{t.base.you}} uploading?"
  importers_controller:
    create:
      already_running: "There is another {{t.base.import}} of this {{t.base.type}} running at this time.  {{t.base.please_try_again_later.capitalize}}."
    get_progress:
      all_processed: "{{t.base.all.capitalize}} records processed."
      amount_processed: "{{records_processed}} records processed"
      back_to: "{{t.base.back_to.capitalize}} {{item_title}}"
      error_message: "There was a problem with the {{t.base.import}}: {{error}}<p><b>The {{t.base.import}} {{t.base.has_been}} stopped</b></p>"
      import_failed: "{{t.base.import.capitalize}} {{t.base.failed}}. {{error}}"
      not_running: "{{t.base.import}} worker not running anymore?"
      to_imports: "{{t.base.back_to.capitalize}} {{t.base.import.pluralize.capitalize}}"
      to_related_topics: "Return to {{t.base.related}} topic."
    permitted_to_create_imports:
      not_authorized: "{{t.base.you.capitalize}} do not have the required permission to import archive sets."
    stop:
      import_stopped: "{{t.base.import.capitalize}} stopped."
  index_page:
    credits:
      powered_by: "Powered by"
    index:
      all_tags: "{{t.base.all}}"
      categories_title: Categories
      comments: "{{count}} {{t.base.zoom_types.comment.pluralize}}"
      contents_by_type: "{{t.base.content.pluralize.capitalize}} {{t.base.by}} {{t.base.type}}"
      continue_to_topic: "{{t.base.click.capitalize}} here to continue to {{t.base.zoom_types.topic}} and its links"
      create_homepage_topic: "{{t.base.create.capitalize}} {{t.base.basket}} homepage"
      edit: "{{t.base.edit.capitalize}}"
      history: "{{t.base.history.capitalize}}"
      image_from_archive: "{{t.base.zoom_types.image.capitalize}} {{t.base.from}} the Archive"
      keyword_search: "Keyword {{t.base.search.capitalize}}"
      latest: "{{t.base.latest.capitalize}}"
      show_x_of_x: "{{t.base.showing}} {{count}} of {{total}}"
      tags_title: "{{t.base.tag.capitalize.pluralize}}"
      view: "{{t.base.view.capitalize}} "
    post_headline:
      read_more: "read more &gt;&gt;"
      read_more_about: "Read More about {{post_title}}"
    post_summary:
      read_more: "read more &gt;&gt;"
      read_more_about: "Read More about {{post_title}}"
    selected_image:
      next_image: "Next Image. "
      play_pause_slideshow: "Play/Pause Slideshow. "
      previous_image: "Previous Image. "
      return_to_grid: "Return to Grid. "
    topic_as_full_page:
      edit: "{{t.base.edit.capitalize}}"
      history: "{{t.base.history.capitalize}}"
  layouts:
    application:
      accessibility: Accessibility
      add_link: "list {{t.base.site}} on Kete.net.nz"
      all_baskets: "{{t.base.all}} {{t.base.basket.pluralize}}"
      basket_label: "Tools for {{t.base.basket}}: {{basket}}"
      basket_profiles: "{{t.base.basket}} profiles"
      choices: "{{t.base.choice.pluralize}} for extended fields"
      combined_rss: "RSS feed for {{t.base.all}} {{t.base.item.pluralize}} on {{t.base.site}}"
      configure: "reconfigure {{t.base.site}}"
      contact: "{{t.base.contact.capitalize}}"
      content_types: "{{t.base.content_type.pluralize}}"
      delete: "{{t.base.delete}} this {{t.base.basket}}"
      delete_confirmation: "{{t.base.are_you_sure}} {{t.base.all.capitalize}} {{t.base.item.pluralize}} in this {{t.base.basket}} will be {{t.base.deleted}} forever!"
      documentation: documentation
      extended_fields: "extended fields"
      home: Home
      import: "{{t.base.import}} content"
      licenses: "administer {{t.base.license.pluralize}}"
      login: "{{t.base.login.capitalize}}"
      logout: Logout
      members: "{{t.base.member.pluralize}}"
      moderate: "{{t.base.moderate}} {{t.base.content.pluralize}}"
      my_baskets: "my {{t.base.basket.pluralize}}"
      new_search_value: "{{t.base.new.capitalize}} {{t.base.search.capitalize}} of {{search_location_name}}"
      new_search_value_within: "{{t.base.new.capitalize}} {{t.base.search.capitalize}} within {{search_location_name}}"
      oai_pmh: "OAI PMH Sets"
      preferences: preferences
      rebuild: "Rebuild {{t.base.search}} databases"
      register: "{{t.base.register.capitalize}}"
      rss: "RSS feed for these {{t.base.item.pluralize}}"
      search_button: Go
      search_label: "{{t.base.search.capitalize}}"
      search_sources: "{{t.base.search}} sources"
      search_value: "{{t.base.search.capitalize}} {{search_location_name}}"
      search_value_within: "{{t.base.search.capitalize}} within {{search_location_name}}"
      site_members: "{{t.base.site}} {{t.base.member.pluralize}}"
      sitemap: Sitemap
      support: "Support:"
      to_content: "{{t.base.back_to.capitalize}} {{t.base.content.capitalize}}"
      toolbox_controls: "Controls:"
      toolbox_label: "Administrator's Toolbox"
      topic_types: "{{t.base.topic_type.pluralize}}"
      zoom_dbs: "Z39.50 {{t.base.search}} databases"
  licenses:
    install:
      choose_license: "-{{t.base.choose}} {{t.base.license}} to {{t.base.import}}-"
      creative_commons_note: "Note: The Creative Commons {{t.base.license}} {{t.base.import.pluralize}} do not include the \"no derivatives\" {{t.base.license.pluralize}} because they are not compatible with most Kete {{t.base.site.pluralize}}. If you need these, {{t.base.add}} them in the interface below."
      submit: "{{t.base.import.capitalize}}"
      title: "{{t.base.import.capitalize}} {{t.base.license.pluralize.capitalize}}"
  licenses_controller:
    install_license:
      imported: "{{t.base.successfully.capitalize}} {{t.base.imported}} {{t.base.license.pluralize}}."
      invalid_import: "{{t.base.invalid.capitalize}} {{t.base.license}} {{t.base.type}}."
      no_import: "No {{t.base.license.pluralize}} to {{t.base.import}} were selected."
      problem_importing: "There was a problem {{t.base.importing}} the {{t.base.license.pluralize}}."
    title: "{{t.base.license.pluralize.capitalize}}"
  members:
    admin_actions:
      accept_membership: "{{t.base.accept.capitalize}} {{t.base.membership.capitalize}}"
      reject_membership: "{{t.base.reject.capitalize}} {{t.base.membership.capitalize}}"
    list:
      admin: "{{t.base.administrator}}"
      admins: "{{t.base.administrator.pluralize}}"
      admin_actions: "Administrative Actions"
      change_to: "{{t.base.change.capitalize}} to"
      email: "{{t.base.email.capitalize}}"
      joined: "{{t.base.joined.capitalize}}"
      login: "{{t.base.login.capitalize}}"
      member: "{{t.base.member}}"
      members: "{{t.base.member.pluralize}}"
      moderator: "{{t.base.moderator}}"
      moderators: "{{t.base.moderator.pluralize}}"
      or: or
      rejected: "{{count}} {{t.base.rejected}}"
      request: "{{t.base.request}}"
      requests: "{{t.base.request.pluralize}}"
      site_admin: "{{t.base.site_administrator}}"
      site_admins: "{{t.base.site_administrator.pluralize}}"
      tech_admin: "{{t.base.technical_administrator}}"
      tech_admins: "{{t.base.technical_administrator.pluralize}}"
      title: "{{basket_name}} {{t.base.member.capitalize.pluralize}}"
      user_name: "{{t.base.username.capitalize}}"
    list_members_in:
      current_no_users_of_type: "Currently no {{listing_type}}"
      search_button: "{{t.base.search.capitalize}}"
      search_for_members: "{{t.base.search.capitalize}} for {{t.base.new}} {{t.base.member.pluralize}}"
    potential_new_members:
      add_members: "{{t.base.add.capitalize}} {{t.base.member.pluralize}}"
      no_members: "No potential {{t.base.member.pluralize}} are available."
      title: "Potential {{t.base.new.capitalize}} {{t.base.member.capitalize.pluralize}}"
    rss:
      description: "{{t.base.member.capitalize.pluralize}} of {{basket_name}}"
      title: "{{site_name}} - {{basket_name}} - {{t.base.latest.capitalize}} 50 {{t.base.member.capitalize.pluralize}}"
  members_controller:
    add_members:
      added_plural: "{{t.base.successfully.capitalize}} {{t.base.added}} {{t.base.new}} {{t.base.member.pluralize}}."
      added_singular: "{{t.base.successfully.capitalize}} {{t.base.added}} {{t.base.new}} {{t.base.member}}."
    ban:
      banned: "{{t.base.successfully.capitalize}} banned {{t.base.user}}."
    become_user:
      logged_in: "{{t.base.logged_in}} {{t.base.successfully}}"
    change_membership_type:
      cannot_be_tech_admin: "{{t.base.user.capitalize}} is not eligable to be {{t.base.technical_administrator}}. The need to be a {{t.base.site_administrator}}, too."
      changed_role: "{{t.base.user.capitalize}} {{t.base.successfully}} {{t.base.changed}} role."
      made_tech_admin: "{{t.base.user.capitalize}} {{t.base.has_been}} {{t.base.made}} {{t.base.technical_administrator}}."
      need_site_admin: "Unable to have no {{t.base.site_administrator.pluralize}}."
    change_request_status:
      accepted: "{{user_name}}'s {{t.base.membership}} {{t.base.request}} {{t.base.has_been}} {{t.base.accepted}}."
      rejected: "{{user_name}}'s {{t.base.membership}} {{t.base.request}} {{t.base.has_been}} {{t.base.rejected}}."
    destroy:
      destroyed: "{{user_name}} {{t.base.has_been}} {{t.base.deleted}} {{t.base.from}} the {{t.base.site}}."
      has_contributions: "{{user_name}} {{t.base.has}} {{t.base.contribution.pluralize}} and {{t.base.cannot_be}} {{t.base.deleted}} {{t.base.from}} the {{t.base.site}}. Perhaps a ban instead?"
      need_site_admin: "Unable to have no {{t.base.site_administrator.pluralize}}."
    join:
      already_joined: "{{t.base.you.capitalize}} already have a role in this {{t.base.basket}} or {{t.base.you}} have already applied to {{t.base.join}}."
      joined: "{{t.base.you.capitalize}} have {{t.base.joined}} the {{basket_name}} basket."
      not_open: "This {{t.base.basket}} isn't currently accepting {{t.base.join}} requests."
      requested: "A {{t.base.basket}} {{t.base.membership}} {{t.base.request}} {{t.base.has_been}} {{t.base.sent}}. {{t.base.you.capitalize}} will get an {{t.base.email}} when it is {{t.base.approved}}."
    list_members_in:
      admin: Admin
      ban: Ban
      delete: "{{t.base.delete.capitalize}}"
      login_as: "{{t.base.login.capitalize}} as {{t.base.user}}"
      member: "{{t.base.member.capitalize}}"
      moderator: "{{t.base.moderator.capitalize}}"
      remove: "{{t.base.remove.capitalize}} {{t.base.from}} {{t.base.basket}}"
      site_admin: "Site Admin"
      tech_admin: "Tech Admin"
    permitted_to_view_memberlist:
      cant_remove: "{{t.base.you.capitalize}} need to have the right permissions to {{t.base.remove}} {{t.base.basket}} {{t.base.member.pluralize}}"
      not_authorized: "{{t.base.you.capitalize}} need to have the right permissions to access this {{t.base.basket.pluralize}} {{t.base.member}} list"
    remove:
      cant_remove_self: "{{t.base.you.capitalize}} {{t.base.cannot}} {{t.base.remove}} yourself {{t.base.from}} the Site {{t.base.basket}}."
      need_site_admin: "Unable to have no {{t.base.basket}} {{t.base.administrator.pluralize}}."
      removed: "{{t.base.successfully.capitalize}} {{t.base.removed}} {{t.base.user}} {{t.base.from}} {{basket_name}}."
    unban:
      unbanned: "{{t.base.successfully.capitalize}} {{t.base.removed}} ban on {{t.base.user}}."
  members_helper:
    admin_actions_correct_list_item:
      are_you_sure: "{{t.base.are_you_sure}}"
      banned: "Banned "
      undo: (undo)
  moderate:
    list:
      flagged_at: "{{t.base.flagged.capitalize}} at"
      flagged_with: "{{t.base.flagged.capitalize}} with"
      full_history: "{{t.base.item}}'s full {{t.base.history}}"
      item_title: Title
      no_items_needing_moderation: "Currently no {{t.base.item.pluralize}} needing {{t.base.moderation}}."
      privacy: "{{t.base.privacy.capitalize}}"
      private: "{{t.base.private}}"
      public: "{{t.base.public}}"
      revision: "{{t.base.revision.capitalize}}"
      title: "{{t.base.moderate.capitalize}}"
    rss:
      description: "{{t.base.item.capitalize.pluralize}} needing {{t.base.moderation}}"
      title: "{{site_name}} - {{basket_name}} - {{t.base.moderate.capitalize}}"
  number:
    currency:
      format:
        delimiter: ","
        format: "%u%n"
        precision: 2
        separator: "."
        unit: $
    format:
      delimiter: ","
      precision: 3
      separator: "."
    human:
      format:
        delimiter: ""
        precision: 1
      storage_units:
        format: "%n %u"
        units:
          byte:
            one: Byte
            other: Bytes
          gb: GB
          kb: KB
          mb: MB
          tb: TB
    percentage:
      format:
        delimiter: ""
    precision:
      format:
        delimiter: ""
  oai_pmh_repository_controller:
    not_available: "OAI PMH Repository {{t.base.not_available}} at this time."
    title: "Oai Pmh Repository"
  oai_pmh_repository_set_model:
    invalid_chars: ": the following characters {{t.base.arent}} {{t.base.allowed}} - {{invalid_chars}}"
  oai_pmh_repository_sets_controller:
    title: "Oai Pmh Repository Sets"
  previous_searches_lib:
    short_search_title_from_params:
      contributor: "{{t.base.by}} {{contributor_name}}"
      date_since: "{{t.base.since}} {{since}}"
      date_until: "{{t.base.until}} {{until}}"
      extended_field: "{{extended_field}}"
      in_reverse: "in reverse"
      limit_to_choice: "{{choice_name}}"
      search_terms: "for {{search_terms}}"
      sort_type: "{{t.base.sorted_by}} {{sort_type}}"
      source_item: "{{t.base.related}} to {{source_item_name}}"
      tag: "{{t.base.tagged}} {{tag_name}}"
      topic_type: "of {{t.base.type}} {{topic_type_name}}"
      type_and_basket: "{{all}} {{privacy}} {{item_type}} in {{basket_name}}"
  privacy_controls_helper:
    privacy_controls_description:
      public_vs_private: "Note: Individual versions of this {{t.base.item}} {{t.base.can_be}} {{t.base.public}} or {{t.base.private}}. The {{t.base.latest}} {{t.base.public}} version will be shown to non-{{t.base.basket}} members if available.  Otherwise, this {{t.base.item}} is completely {{t.base.private}}."
  private_files_controller:
    bad_request: "Error 400: Bad {{t.base.request.capitalize}}"
    not_found: "Error 404: File Not Found"
    unauthorized: "Error 401: Unauthorized"
  profile_model:
    all_form_types_have_rule_type:
      missing_rules_types: "The following {{t.base.form.pluralize}} are missing a rule {{t.base.type}}: {{missing}}"
      no_rules_submitted: "No {{t.base.profile}} rules have been submitted. Try again."
    rules:
      all: "{{t.base.all.capitalize}}."
      none: None.
    type_options:
      all: "{{t.base.all.capitalize}}"
      none: None
      select_below: "Select Below"
  profiles:
    appearance:
      add_new_theme: "{{t.baskets.appearance.new_theme}}"
      additional_footer_content: "{{t.baskets.appearance.additional_footer_content}}"
      additional_footer_content_do_not_sanitize: "{{t.baskets.appearance.additional_footer_content_exception}}"
      additional_footer_content_replace: "{{t.baskets.appearance.additional_footer_content_replace}}"
      additional_footer_content_replace_description: "{{t.baskets.appearance.additional_footer_content_replace_example}}"
      basket_list_menu_options: "{{t.baskets.appearance.basket_list_options}}"
      basket_list_menu_options_description: "{{t.baskets.appearance.basket_list_options_example}}"
      font_family: "{{t.baskets.appearance.font_family}}"
      header_image: "{{t.baskets.appearance.current_header}}"
      header_image_description: "{{t.baskets.appearance.header_example}}"
      inherit: "{{t.base.inherit.capitalize}}"
      no_themes_available: "{{t.baskets.appearance.no_themes}}"
      number_of_menu_topics: "{{t.baskets.appearance.basket_list_options_topic_number}}"
      show_action_menu_description: "{{t.baskets.appearance.show_actions_to_example}}"
      show_action_menu_to: "{{t.baskets.appearance.show_actions_to}}"
      show_add_links_description: "{{t.baskets.appearance.show_add_links_to_example}}"
      show_add_links_to: "{{t.baskets.appearance.show_add_links_to}}"
      show_discussion_description: "{{t.baskets.appearance.show_comments_to_example}}"
      show_discussion_to: "{{t.baskets.appearance.show_comments_to}}"
      show_field: "{{t.base.show}}<br />{{t.base.field}}?"
      show_flagging_description: "{{t.baskets.appearance.show_flagging_to_example}}"
      show_flagging_to: "{{t.baskets.appearance.show_flagging_to}}"
      show_hide_controls: "{{t.baskets.appearance.controls}}"
      sort_menu_by: "{{t.baskets.appearance.basket_list_options_sort_by}}"
      sort_menu_in_reverse: "{{t.baskets.appearance.basket_list_options_in_reverse}}"
      theme: "{{t.baskets.appearance.theme}}"
      theme_alt: "{{t.baskets.appearance.screenshot_of}}"
    edit:
      administrator_contact: "{{t.baskets.form.admin_contact}}"
      allow_non_member_comment: "{{t.baskets.form.comment_control}}"
      anyone_logged_in: "{{t.baskets.form.comment_control_anyone}}"
      closed_membership: "{{t.baskets.form.join_policy_closed}}"
      default_browse_order: "{{t.baskets.form.browse_order}}"
      default_browse_type: "{{t.baskets.form.browse_view_as}}"
      default_browse_type_description: "{{t.baskets.form.browse_view_as_choice}}"
      default_file_privacy: "{{t.baskets.form.file_privacy}}"
      default_item_privacy: "{{t.baskets.form.item_privacy}}"
      disable_site_recent_topics: "{{t.baskets.form.recent_topics}}"
      disable_site_recent_topics_description: "{{t.baskets.form.recent_topics_example}}"
      disabled: "{{t.baskets.form.disabled}}"
      enabled: "{{t.baskets.form.enabled}}"
      import_archive_set_policy: "{{t.baskets.form.import_archive_set_policy}}"
      import_archive_set_policy_description: "{{t.baskets.form.import_archive_set_policy_example}}"
      in_reverse: "{{t.baskets.form.browse_order_in_reverse}}"
      inherit: "{{t.base.inherit.capitalize}}"
      join_policy: "{{t.baskets.form.join_policy}}"
      member_list_policy: "{{t.baskets.form.member_list_policy}}"
      member_list_policy_description: "{{t.baskets.form.member_list_policy_example}}"
      moderate_items_except: "{{t.baskets.form.moderate_except}}"
      moderation_policy: "{{t.baskets.form.moderation}}"
      only_basket_members: "{{t.baskets.form.comment_control_members}}"
      open_membership: "{{t.baskets.form.join_policy_open}}"
      privacy_controls: "{{t.baskets.form.privacy_controls}}"
      private: "{{t.base.private.capitalize}}"
      private_file_visibility: "{{t.baskets.form.file_visibility}}"
      private_file_visibility_description: "{{t.baskets.form.file_visibility_example}}"
      private_item_notification: "{{t.baskets.form.private_item_notification}}"
      private_item_notification_example: "{{t.baskets.form.private_item_notification_example}}"
      private_item_notification_show_short_summary: "{{t.baskets.form.private_item_notification_show_short_summary}}"
      private_item_notification_show_title: "{{t.baskets.form.private_item_notification_show_title}}"
      public: "{{t.base.public.capitalize}}"
      request_membership: "{{t.baskets.form.join_policy_request}}"
      show_field: "{{t.profiles.appearance.show_field}}"
      sort_by: "{{t.baskets.form.browse_order_sort_by}}"
      use_software_default: "{{t.baskets.form.browse_order_default}}"
    homepage_options:
      archives: "{{t.baskets.homepage_form.archives}}"
      archives_description: "{{t.baskets.homepage_form.archives_as}}"
      dont_redirect: "{{t.baskets.homepage_form.dont_redirect}}"
      go_to_browse: "{{t.baskets.homepage_form.go_to_browse}}"
      go_to_browse_description: "{{t.baskets.homepage_form.redirect_to}}"
      homepage_topic: "{{t.baskets.homepage_form.homepage_topic}}"
      how_many_recent_topics: "{{t.baskets.homepage_form.recent_topics_amount}}"
      how_many_tags: "{{t.baskets.homepage_form.tags_amount}}"
      list_tags_as: "{{t.baskets.homepage_form.tags_as}}"
      list_topics_as: "{{t.baskets.homepage_form.recent_topics_type}}"
      order_tags_by: "{{t.baskets.homepage_form.tags_ordered_by}}"
      recent_topics: "{{t.baskets.homepage_form.recent_topics}}"
      rss_or_atom_feeds: "{{t.baskets.homepage_form.rss_feeds}}"
      search: "{{t.baskets.homepage_form.search}}"
      search_description: "{{t.baskets.homepage_form.include_search}}"
      selected_image: "{{t.baskets.homepage_form.selected_image}}"
      selected_image_description: "{{t.baskets.homepage_form.selected_image_show}}"
      show_field: "{{t.profiles.appearance.show_field}}"
      show_link_to_homepage_topic: "{{t.baskets.homepage_form.homepage_link}}"
      show_only_homepage_topic: "{{t.baskets.homepage_form.only_homepage}}"
      sidebar_content: "{{t.baskets.homepage_form.sidebar_content}}"
      sidebar_content_do_not_sanitize: "{{t.baskets.homepage_form.security_exception_example}}"
      tags: "{{t.baskets.homepage_form.tags}}"
  profiles_controller:
    fields_available: "{{t.base.field.pluralize.capitalize}} Available"
    title: "{{t.base.basket.capitalize}} Profiles"
  profiles_helper:
    rules_allowed_check_box:
      expand_policy: "Expand Policy. "
    rules_form_column:
      cannot_be_changed: "({{t.base.cannot_be_changed}})"
      choose_included_fields: "--{{t.base.choose}} included {{t.base.form}} {{t.base.field.pluralize}}--"
  search:
    all:
      all: "{{t.base.all.capitalize}} "
      results_in: "Results in "
    for:
      current_search: " for {{t.base.your}} {{t.base.search}} '{{search_terms}}'"
      refine_search: "Refine {{t.base.your}} {{t.base.search}} for '{{search_terms}}' {{t.base.searching}} in {{basket_link}}"
      refinements: " and {{refinements}}"
      results_in: "Results in "
      whole_site: " whole {{t.base.site}}"
    form:
      about_a: "{{t.base.about_a.capitalize}}:"
      any_topic_type: "- {{t.base.any}} {{t.base.type}} -"
      browse_by_category: "{{t.base.browse.capitalize}} {{t.base.by}} category"
      getting_categories: "Getting Categories. "
      in_reverse: "In reverse?"
      options: Options
      privacy_type: "That are:"
      private: "{{t.base.private.capitalize}}"
      public: "{{t.base.public.capitalize}}"
      search: "{{t.base.search.capitalize}}"
      sort_by: "{{t.base.sort_by.capitalize}}:"
      update_results: "{{t.base.update}}"
    generic:
      more: "more &gt;&gt;"
      more_on: "More information on {{title}}"
    homepage_topic_form:
      change_homepage_topic: "{{t.base.change.capitalize}} Homepage {{t.base.zoom_types.topic.capitalize}}"
      close: "{{t.base.close.capitalize}}"
      current_homepage_topic: "(current homepage topic)"
      no_topics_found: "No {{t.base.zoom_types.topic.capitalize.pluralize}} found"
      search_for_topic: "{{t.base.search.capitalize}} for {{t.base.zoom_types.topic.capitalize}}"
      search_for_topics: "{{t.base.search.capitalize}} for {{t.base.zoom_types.topic.capitalize.pluralize}}"
      select_homepage_topic: "Select which {{t.base.zoom_types.topic.capitalize}} to mark as Homepage, then {{t.base.click}} 'Change'."
      title: "{{t.base.change.capitalize}} Homepage {{t.base.zoom_types.topic.capitalize}}"
    image:
      more: "more &gt;&gt;"
      more_on: "More information on {{title}}"
      view_image: "{{t.base.view.capitalize}} {{t.base.zoom_types.image.capitalize}}"
    index:
      title: "{{t.base.search.capitalize}} {{basket_name}}"
    link_related:
      linked: "Linked {{t.base.successfully}}"
    list:
      clear_all_searches: "{{t.base.clear}} {{t.base.all}} {{t.base.search.pluralize}}"
      remove: "{{t.base.remove}}"
      title: "{{t.base.previous.capitalize}} {{t.base.search.pluralize.capitalize}}"
    mini_controls:
      about_a: "{{t.base.about_a}}"
      all_of: "{{t.base.all.capitalize}} of {{site_basket_name}}"
      and: "And"
      any_topic_type: "- {{t.base.any}} {{t.base.topic_type}} - "
      categorised: "categorised"
      clear: "{{t.base.clear.capitalize}} {{t.base.search.capitalize}} {{t.base.option.pluralize.capitalize}}"
      clear_all_searches: "{{t.base.clear.capitalize}} {{t.base.all.capitalize}} {{t.base.search.pluralize.capitalize}}"
      close: "{{t.base.close.capitalize}}"
      date: "{{t.base.item.pluralize.capitalize}} that have a {{t.base.date}} or {{t.base.time}}"
      in_reverse: "In reverse?"
      previous_searches: "{{t.base.previous.capitalize}} {{t.base.search.pluralize.capitalize}}"
      private: "{{t.base.private.capitalize}}"
      public: "{{t.base.public.capitalize}}"
      recent_searches: "{{t.base.recent.capitalize}} {{t.base.search.pluralize.capitalize}}"
      results_display: "{{t.base.results.capitalize}} {{t.base.display.capitalize}}"
      search_terms: "{{t.base.search.capitalize}} Terms"
      show: "{{t.base.show}}"
      sorted_by: "{{t.base.sorted_by}}"
      that_are: "that are"
      update: "{{t.base.update.capitalize}} {{t.base.results.capitalize}}"
      within: within
    rebuild_zoom_index:
      completed: "Completed. "
      in_progress: "...in progress."
      starting: "Starting rebuild..."
      title: "Zoom Index Rebuild {{t.base.from}} {{start}} to {{end}}"
    refine_by_choice:
      limit_to_category: "Limit it to category?"
    refine_by_date:
      date_since: "{{t.base.since}}"
      date_until: "{{t.base.until}}"
    refine_results:
      refine: "Refine {{t.base.your}} {{t.base.results.capitalize}}"
    related:
      more_on: "More information on {{title}}"
      title: "{{t.base.related.capitalize}}:"
    related_form:
      close: "{{t.base.close.capitalize}}"
      executing_action: "Executing {{action}} action. "
      function_a: "{{action}} a:"
      no_items_found: "No {{item_class}} found"
      search: "{{t.base.search.capitalize}}"
      search_for: "{{t.base.search.capitalize}} for {{privacy}} {{item_class}}:"
      search_private: "{{t.base.search}} {{t.base.private}}"
      search_public: "{{t.base.search}} {{t.base.public}}"
      select_items: "Select which {{item_class}} to {{action}}, then {{t.base.click}} '{{action}}'."
      title: "{{action}} {{t.base.related}} {{zoom_class_plural}}"
    results:
      add_a_new: "{{t.base.add.capitalize}} a {{t.base.new}} "
      address: "Address:"
      coordinates: "Coordinates:"
      no_results_of_any_type_found: "No {{t.base.results}} of any {{t.base.type}} were found."
      no_results_of_this_type_found: "No {{zoom_class}} {{t.base.results}} found, but there are other {{t.base.results}}:"
      results_on_this_page: "results on this page"
      search_source_title: "More Resources"
      show: "{{t.base.show.capitalize}}"
      showing_x-y_of_z: "{{t.base.showing}} {{start}}-{{finish}} results of {{total}}"
      view_list: "List {{t.base.view.capitalize}}"
      view_map: "{{t.base.view.capitalize}} on map"
      x-y_have_z_locations: "{{start}}-{{finish}} results have {{n_locations}} locations"
    rss:
      latest: "{{t.base.latest.capitalize}}"
      next: Next
      related: "{{t.base.related.capitalize}}:"
      x_results_in: "{{amount}} Results in"
      showing_x-y_of_z: "{{t.base.showing.capitalize}} {{start}} - {{end}} results of {{total}}"
    setup_rebuild:
      all_types: "{{t.base.all}} {{t.base.type.pluralize}}"
      clear_search_engine: "Clear and restart {{t.base.search}} engine first?"
      clear_search_engine_description: "This will \"erase\" {{t.base.your}} {{t.base.existing}} {{t.base.search}} records and start {{t.base.from}} scratch.  Use this if starting {{t.base.from}} the first record and ending with the last.  This involves some steps that don't work on all platforms (e.g. Solaris 10), uncheck if will be doing these steps by hand {{t.base.from}} the command line on the server."
      end_rebuild_at: "Record id to finish rebuilding process at?"
      end_rebuild_at_description: "{{t.base.you.capitalize}} must {{t.base.choose}} a specific {{t.base.type}} to rebuild rather than \"{{t.base.all}} {{t.base.type.pluralize}}\" to use anything but 'last'. If {{t.base.you}} {{t.base.choose}} a specific {{t.base.type}}, you may specify the id number in the Kete database to finishing rebuilding at, i.e. the {{t.base.value}} you of the id column in the {{t.base.zoom_types.topic.pluralize}} table that corresponds to the last {{t.base.zoom_types.topic}} to be {{t.base.added}} to the {{t.base.search}} engine."
      skip_existing_records: "Should we skip records that are already in the {{t.base.search}} engine?"
      skip_existing_records_description: "In most cases you will want to leave this unchecked for a faster rebuild.  However it is useful when you are rebuilding only missing records that didn't make it into the {{t.base.search}} engine."
      skip_private_records: "Should we skip {{t.base.private}} records?"
      skip_private_records_description: "In most cases you will want to leave this unchecked for a complete rebuild.  However, if you don't have {{t.base.any}} {{t.base.existing}} {{t.base.private}} records (perhaps you are upgrading from Kete 1.0 to 1.1, for example), you can use this to speed up the rebuild process."
      start_rebuild: "Rebuild {{t.base.search.capitalize}} Records"
      start_rebuild_at: "Record id to start rebuilding process at?"
      start_rebuild_at_description: "You must {{t.base.choose}} a specific {{t.base.type}} to rebuild rather than \"{{t.base.all}} {{t.base.type.pluralize}}\" to use anything but 'first'. If you {{t.base.choose}} a specific {{t.base.type}}, you may specify the id number in the Kete database to start rebuilding at, i.e. the {{t.base.value}} you of the id column in the {{t.base.zoom_types.topic.pluralize}} table that corresponds to the first {{t.base.zoom_types.topic}} to be {{t.base.added}} to the {{t.base.search}} engine."
      title: "Set up a rebuild of {{t.base.your}} {{t.base.search}} records"
      type_to_rebuild: "{{t.base.type.capitalize}} to rebuild:"
  search_controller:
    check_rebuild_status:
      all_processed: "{{t.base.all.capitalize}} records processed"
      amount_processed: "{{amount}} records processed"
      browse: "{{t.base.browse.capitalize}} records"
      failed_reason: "These maybe {{t.base.private}} or pending {{t.base.moderation}} records, depending on the case. See log/backgroundrb... for details."
      finished_at: "at {{end_time}}"
      need_js: "You need javascript {{t.base.enabled}} for this feature."
      not_running: "rebuild worker not running anymore?"
      rebuild_error: "There was a problem with the rebuild: {{error}}<p><b>The rebuild {{t.base.has_been}} stopped</b></p>"
      rebuild_failed: "Rebuild {{t.base.failed}}. {{error}}"
      records_failed: "{{amount}} records {{t.base.failed}}"
      records_skipped: "{{amount}} records skipped"
      return_to_rebuild: "Return to Rebuild Set up"
      started_at: "Started at {{start_time}}"
      working_on: "Working on {{zoom_class}}"
    clear:
      previous_searches_removed: "{{t.base.all.capitalize}} {{t.base.previous}} {{t.base.search.pluralize}} have been {{t.base.cleared}}."
      selected_search_removed: "The selected {{t.base.previous}} {{t.base.search}} has been {{t.base.removed}}."
    find_index:
      changed: "Homepage {{t.base.zoom_types.topic}} {{t.base.changed}} {{t.base.successfully}}"
      failed: "Problem changing Homepage {{t.base.zoom_types.topic}}"
    find_related:
      add: "{{t.base.add.capitalize}}"
      remove: "{{t.base.remove.capitalize}}"
      restore: Restore
    for:
      no_search_terms: "{{t.base.you.capitalize}} haven't {{t.base.entered}} {{t.base.any}} {{t.base.search}} terms."
    private_search_authorisation:
      forbidden: "Error 403: Forbidden"
    rebuild_zoom_for_items:
      zoom_rebuilt: "ZOOM indexes rebuilt"
  search_helper:
    last_part_of_title_if_refinement_of:
      about_a: " {{t.base.about_a}} {{topic_type_name}}"
      and: " and"
      contributed_by: " {{t.base.contributed}} {{t.base.by}} {{contributor}}"
      date_since: " {{t.base.since}} {{date}}"
      date_until: " {{t.base.until}} {{date}}"
      extended_field: " with {{field_name}}"
      limit_to_choice: " of {{choice}}"
      privacy_type: " that are {{privacy}}"
      related_to: " {{t.base.related}} to {{source_item}}"
      tagged_as: " {{t.base.tagged}} as {{tag_name}}"
  search_model:
    browse_default: "{{t.base.browse.capitalize}} {{t.base.default.capitalize}}"
    choice_hierarchy: "{{t.base.choice.capitalize}} Hierarchy"
    date: Date
    last_modified: "Last Modified"
    map: Map
    relevance: Relevance
    title: Title
    view_as_types_as_options:
      inherit: "{{t.base.inherit.capitalize}}"
  search_sources_controller:
    source_targets:
      all: "{{t.base.all.capitalize}}"
      items: "{{t.base.item.capitalize.pluralize}} - User Input for Terms"
      search: "Search - User Inputted Search as is"
  site_linking_lib:
    error_linking_site:
      appears_listed: "However, it appears that {{t.base.your}} {{t.base.site}} is now listed. {{t.base.please.capitalize}} check the listing to make sure it is correct at <a href='{{new_kete_site}}'>{{new_kete_site}}</a>."
      error_occured: "There was an error linking to {{t.base.your}} {{t.base.site}}. "
      manual_linking: "You can do it manually at <a href='{{new_kete_site}}'>{{new_kete_site}}</a>."
  slideshows_helper:
    all_results: "{{t.base.back_to.capitalize}} results"
    next: "Next &raquo;"
    previous: "&laquo; Previous"
    stop: "Stop results slideshow"
  support:
    array:
      last_word_connector: ", and "
      two_words_connector: " and "
      words_connector: ", "
  tagging_controller_lib:
    add_tags:
      error_adding_tags: "There was an error {{t.base.adding}} the {{t.base.new}} {{t.base.tag.pluralize}} to {{item_title}}: {{t.base.tag.capitalize.pluralize}} {{errors}}"
      no_tags_entered: "There was an error {{t.base.adding}} the {{t.base.new}} {{t.base.tag.pluralize}} to {{item_title}}: No {{t.base.tag.pluralize}} were {{t.base.entered}}."
      tags_added: "The {{t.base.new}} {{t.base.tag}}(s) have been {{t.base.added}} to {{item_title}}"
      version_comment: "{{t.base.only.capitalize}} {{t.base.tag.pluralize}} {{t.base.added}}: {{tags_list}}"
  tags:
    list:
      retrieving_tags: "Retrieving {{t.base.tag.pluralize}}. "
      title: "{{t.base.tag.capitalize.pluralize}}"
    rss:
      description: "{{t.base.tag.capitalize.pluralize}} in {{basket_name}}"
      title: "{{site_name}} - {{basket_name}} - {{t.base.latest.capitalize}} {{count}} {{t.base.tag.capitalize.pluralize}}"
    tags_list:
      no_tags: "No {{t.base.tag.pluralize}} to display."
  time:
    am: am
    formats:
      default: "%a, %d %b %Y %H:%M:%S %z"
      long: "%B %d, %Y %H:%M"
      short: "%d %b %H:%M"
    pm: pm
  topic_type_model:
    invalid_chars: ": the following characters {{t.base.arent}} {{t.base.allowed}} - {{invalid_chars}}"
  topic_types:
    available_fields_form:
      add: "{{t.base.add.capitalize}} to {{t.base.topic_type.capitalize}}"
      multiple: (multiple)
      no_fields_available: "No {{t.base.form}} {{t.base.field.pluralize}} are available."
      no_more_allowed: "{{t.base.you.capitalize}} {{t.base.cannot}} {{t.base.add}} {{t.base.any}} additional {{t.base.field.pluralize}} to this {{t.base.topic_type}}, see above."
      optional: (optional)
      required: (required)
      title: "Available {{t.base.form.capitalize}} {{t.base.field.pluralize.capitalize}}"
    current_fields:
      delete: "{{t.base.delete.capitalize}}"
      embedded: "display under {{t.base.description}}?"
      multiple: (multiple)
      no_fields_mapped: "No {{t.base.form}} {{t.base.field.pluralize}} currently mapped to this {{t.base.topic_type}}."
      no_more_allowed: "{{t.base.you.capitalize}} {{t.base.cannot}} {{t.base.add}} {{t.base.any}} additional {{t.base.field.pluralize}} to this {{t.base.topic_type}}, see above."
      private_only: "{{t.base.private}} {{t.base.only}}?"
      required: required?
      title: "Current {{t.base.form.capitalize}} {{t.base.field.pluralize.capitalize}}"
      update_fields: "{{t.base.update.capitalize}} {{t.base.form}}"
    edit:
      edit_button: "{{t.base.edit.capitalize}}"
      return_to_topic_types: "Return to {{t.base.topic_type.pluralize}}"
      title: "{{t.base.editing.capitalize}} {{t.base.topic_type}}"
    form:
      description: Description
      name: "{{t.base.name.capitalize}}"
    generic_topic_fields:
      description_field: "Description: this is where users put the body of their {{t.base.zoom_types.topic}}."
      note: "{{t.base.all.capitalize}} {{t.base.topic_type.pluralize}} inherit the following {{t.base.form}} {{t.base.field.pluralize}}:"
      present_in_all: "These {{t.base.form}} {{t.base.field.pluralize}} will be present in {{t.base.all}} {{t.base.topic_type.pluralize}}."
      short_summary_field: "Short Summary: This is a brief blurb suitable for lists of results.  It should be plain text."
      title: "Generic {{t.base.zoom_types.topic.capitalize}} {{t.base.field.pluralize.capitalize}}"
      title_field: "Title: What shoule we this topic?  This will also be used to generate a URL for this topic."
    inherited_fields:
      multiple: (multiple)
      no_inherited_form_fields: "No inherited {{t.base.form}} {{t.base.field.pluralize}}."
      no_more_allowed: "{{t.base.you.capitalize}} {{t.base.cannot}} {{t.base.add}} {{t.base.any}} additional {{t.base.field.pluralize}} to this {{t.base.topic_type}}."
      optional: (optional)
      required: (required)
      title: "Inherited {{t.base.form.capitalize}} {{t.base.field.pluralize.capitalize}}"
    list:
      add_sub_topic: "{{t.base.add.capitalize}} sub-{{t.base.type}}"
      cannot_delete: "Can't {{t.base.delete.capitalize}} This {{t.base.type}}."
      created_at: "{{t.base.created.capitalize}} at"
      delete: "{{t.base.delete.capitalize}}"
      delete_confirm: "{{t.base.are_you_sure}}"
      description: Description
      edit: "{{t.base.edit.capitalize}}"
      has_topics: "Has {{t.base.zoom_types.topic.pluralize}}."
      name: "{{t.base.name.capitalize}}"
      options: Options
      title: "Listing {{t.base.topic_type.pluralize}}"
      updated_at: "{{t.base.updated.capitalize}} at"
    new:
      cancel: "{{t.base.cancel}}"
      create_button: "{{t.base.create.capitalize}}"
      title: "{{t.base.new.capitalize}} {{t.base.topic_type}}"
    show:
      back: Back
      edit: "{{t.base.edit.capitalize}}"
  topics:
    actions_menu:
      delete: "{{t.base.delete.capitalize}}"
      delete_confirm: "{{t.base.are_you_sure}}"
      discuss: Discuss
      edit: "{{t.base.edit.capitalize}}"
      history: "{{t.base.history.capitalize}}"
      item_details: "{{t.base.item.capitalize}} Details"
      make_theme: "Make theme"
      zoom_update: "Zoom Update {{t.base.item}} (+{{t.base.related}})"
      zoom_update_confirm: "Are {{t.base.you}} sure {{t.base.you}} want to update?"
    content_wrapper_start:
      baskets: "{{t.base.basket.pluralize}}"
    discussion:
      discuss_this_topic: "Discuss This {{t.base.zoom_types.topic.capitalize}}"
    edit:
      not_authorized: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
    flag_form:
      flag_button: "{{t.base.flag.capitalize}}"
      flag_instructions: "{{t.base.please.capitalize}} give details that might be helpful for the {{t.base.moderator}} {{t.base.reviewing}} this {{t.base.item}}.  For example, if {{t.base.flagging}} as a duplicate, the URL for the {{t.base.item}} this {{t.base.content}} duplicates."
      flag_item_title: "{{t.base.flag.capitalize}} this {{t.base.item}}"
      message_for: "Message for"
      not_authorized: "Sorry {{t.base.flagging}} {{t.base.has_been}} {{t.base.disabled}} on this section of the {{t.base.site}}"
      reject_button: "{{t.base.reject.capitalize}}"
      reject_instructions: "{{t.base.please.capitalize}} {{t.base.add}} a message to the {{t.base.user}} telling them why {{t.base.you}} have passed over their submitted revision."
      reject_revision_title: "{{t.base.reject.capitalize}} this {{t.base.revision}}"
      restricted: "{{t.base.restrict.capitalize}} access to {{t.base.moderator.pluralize}} or higher role?"
      restricted_description: "Leaving this unchecked will flag the {{t.base.revision}}, but {{t.base.user.pluralize}} will still be able to see the {{t.base.revision}} from the {{t.base.item}} {{t.base.history}} {{t.base.preview}}."
      review_button: "{{t.base.review.capitalize}}"
      review_instructions: "{{t.base.please.capitalize}} {{t.base.add}} a message to the {{t.base.user}} telling them why {{t.base.you}} have {{t.base.reviewed}} their submitted revision and left it as is."
      review_revision_title: "{{t.base.review.capitalize}} this {{t.base.revision}}"
    flagging_contributor:
      created: "{{t.base.created}}"
      created_or_updated_on: "on"
      last_to_edit: "was the last to {{t.base.edit}}"
    form:
      allow_insecure_elements: "{{t.base.allow.capitalize}} {{t.base.new}} {{t.base.form.pluralize}} and other possible insecure elements and attributes in the HTML?"
      comment_on_edit: "{{t.base.zoom_types.comment.capitalize}} on this {{t.base.edit}}"
      create: "{{t.base.create.capitalize}}"
      current_image: "Current Image:"
      description: "{{t.base.description.capitalize}}"
      description_example: "Note: {{t.base.new}} {{t.base.form.pluralize}} and javascript are not {{t.base.allowed}} for security reasons"
      description_example_exception: ", unless {{t.base.you}} check the box below"
      downloaded_by_everyone: "{{t.base.can_be_downloaded.capitalize}} {{t.base.by}} {{t.base.everyone}}"
      downloaded_by_role: "{{t.base.can.capitalize}} {{t.base.only}} be {{t.base.downloaded}} {{t.base.by}} people who have {{role_name}} access."
      editing: "{{t.base.editing.capitalize}}"
      embedded_note: "If {{t.base.you}} fill out fields here as well, the embedded metadata will be {{t.base.added}} to it at the end."
      file_privacy: "Attached file privacy"
      file_privacy_example: "{{t.base.please.capitalize}} note that once {{t.base.public}}, an attached file {{t.base.cannot_be}} {{t.base.made}} {{t.base.private}}."
      getting_tags: "Getting {{t.base.tag.pluralize}}. "
      help: help
      move_baskets: "Move to another {{t.base.basket}}?"
      new: "{{t.base.new.capitalize}}"
      note: "Note:"
      privacy: Privacy
      private: "{{t.base.private.capitalize}}"
      private_description: "({{t.base.can_be_viewed.capitalize}} {{t.base.only}} {{t.base.by}} {{t.base.basket}} {{t.base.member.pluralize}})"
      public: "{{t.base.public.capitalize}}"
      public_description: "({{t.base.can_be_viewed.capitalize}} {{t.base.by}} {{t.base.everyone}})"
      related_items_position: "Where should the {{t.base.related.capitalize}} {{t.base.item.capitalize.pluralize}} {{t.base.content}} be inserted into the page?"
      required_fields: "* denotes a required {{t.base.field}}"
      short_summary: "Short Summary"
      skip_email_notification: "Skip {{t.base.email}} notification to other {{role_type}} for this {{t.base.private}} {{t.base.item}}?"
      tags: "{{t.base.tag.capitalize.pluralize}} (separated by commas)"
      title: Title
      update: "{{t.base.update.capitalize}}"
      upload: Upload
      upload_image: "Upload {{t.base.zoom_types.image}}"
      url: URL
    history:
      back_to_live: "{{t.base.back_to.capitalize}} live"
      comments: "{{t.base.zoom_types.comment.pluralize.capitalize}}"
      contributor: "{{t.base.contributor.capitalize}}"
      flags: "{{t.base.flag.capitalize.pluralize}}"
      has_private_version: "This {{t.base.item}} {{t.base.has}} {{t.base.private}} versions. {{login}} as a {{t.base.basket}} {{t.base.member}} to {{t.base.view}} these."
      login_link: "{{t.base.login}}"
      number: Number
      privacy: Privacy
      private: "{{t.base.private}}"
      public: "{{t.base.public}}"
      revision_history: "Revision {{t.base.history.capitalize}}:"
      updated: "{{t.base.updated.capitalize}}"
    license_chooser_or_agreement:
      how_to_set_license: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.change}} or set {{t.base.your}} {{t.base.default}} licence by {{t.base.editing}} {{t.base.you}}r {{t.base.profile}}"
      license_description: "This {{item_type}} is {{t.base.licensed}} under the {{license_title}}. By {{t.base.editing}} it {{t.base.you}} agree that {{t.base.your}} changes will fall under this {{t.base.license}}."
      see_terms: "{{t.base.please.capitalize}} see the {{tac_link}} for information on how {{t.base.contribution.pluralize}} are {{t.base.licensed}}."
      tac_link: "{{t.base.site}} terms and conditions"
      title: "{{t.base.license.capitalize}}"
      view_license: "{{t.base.view}} {{t.base.license}}"
    new:
      choose_type: "{{t.base.choose.capitalize}} {{t.base.type.capitalize}}"
      what_is_topic_about: "What is the {{t.base.zoom_types.topic}} about?"
    preview:
      flagged: "{{t.base.flagged.capitalize}}"
      not_authorized: "{{t.base.you.capitalize}} {{t.base.arent}} {{t.base.allowed}} to {{t.base.view}} this revision of this {{t.base.item}} at the current time."
      permission_denied: "Permission Denied"
      preview_revision: "{{t.base.preview.capitalize}} revision"
      reasons_flagged: "Reasons {{t.base.flagged}}:"
      topic_type: "{{t.base.topic_type.capitalize}}:"
    preview_actions:
      delete_all_versions: "{{t.base.delete.capitalize}} completely"
      delete_confirm: "{{t.base.are_you_sure}}"
      history: "{{t.base.history.capitalize}}"
      make_live: "Make live"
      make_live_confirm: "{{t.base.are_you_sure}}"
      mark_as_reviewed: "Mark as {{t.base.reviewed}}"
      mark_as_reviewed_confirm: "{{t.base.are_you_sure}}"
      reject: "{{t.base.reject.capitalize}}"
      reject_confirm: "{{t.base.are_you_sure}}"
      title: "Actions on this {{t.base.revision}}:"
      title_for_item: "Actions for entire {{t.base.item}}:"
    privacy_chooser:
      private_version: "{{t.base.private.capitalize}} version"
      public_version: "{{t.base.public.capitalize}} version (live)"
    related_items:
      create: "{{t.base.create.capitalize}}"
      import_set: "{{t.base.import.capitalize}} Set"
      link_existing: "Link {{t.base.existing.capitalize}}"
      related_items: "{{t.base.related.capitalize}} {{t.base.item.capitalize.pluralize}}"
      related_topics: "{{t.base.related.capitalize}} {{t.base.zoom_types.topic.pluralize.capitalize}}:"
      remove: "{{t.base.remove.capitalize}}"
      restore: Restore
    related_items_section:
      not_related: "This {{item_type}} is not {{t.base.related}} to {{t.base.any}} {{t.base.zoom_types.topic.pluralize}} at this time."
      play_slideshow: "Play Slideshow. "
      private: "{{t.base.private}}"
      public: "{{t.base.public}}"
    show:
      topic: "{{t.base.zoom_types.topic.capitalize}}:"
      topic_type: "{{t.base.topic_type.capitalize}}:"
    slideshow_controls:
      current: "{{t.base.viewing.capitalize}}: {{slideshow_total}} of {{total}}"
    tags:
      click_to_add: "{{t.base.click}} to {{t.base.add}} {{t.base.tag}}(s)"
      getting_tags: "Getting {{t.base.tag.pluralize}}. "
      sending_tags: "Sending {{t.base.tag.pluralize}}. "
      title: "{{t.base.tag.capitalize.pluralize}}"
    topic_types:
      about_a: "{{t.base.about_a.capitalize}}?"
  topics_controller:
    create:
      created: "{{t.base.zoom_types.topic.capitalize}} {{t.base.was_created}}."
      created_related: "{{t.base.related.capitalize}} {{t.base.zoom_types.topic.capitalize}} {{t.base.was_created}}."
    edit:
      not_authorized: "{{t.base.you.capitalize}} don't have permission to {{t.base.edit}} this topic."
    update:
      changed_topic_type: "You've {{t.base.changed}} the {{t.base.topic_type}} for this topic. {{t.base.please.capitalize}} {{t.base.review}} the available {{t.base.field.pluralize}}."
      updated: "{{t.base.zoom_types.topic.capitalize}} {{t.base.was_updated}}."
  user_model:
    failed_security_answer: ": {{t.base.your.capitalize}} security question answer {{t.base.failed}}. {{t.base.please_try_again}}."
    locale_incorrect: ": Unrecognised {{t.base.language}}. Must be one of the following: {{locales}}"
  user_notifier:
    activation:
      activated: "{{user_name}}, {{t.base.your}} {{t.base.account}} {{t.base.has_been}} {{t.base.activated}}."
    banned:
      deactivated: "{{user_name}} {{t.base.your}} {{t.base.account}} {{t.base.has_been}} deactivated.  You will no longer be able to {{t.base.contribute}} to this {{t.base.site}}."
    basket_create_policy:
      approved:
        approved_for_use: "The {{t.base.basket}} {{t.base.you}} {{t.base.requested}}, '{{basket_name}}', {{t.base.was}} {{t.base.approved}} for use."
        edit_it_by: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.edit}} this {{t.base.basket}} by going to"
        view_contents_at: "And {{t.base.view}} its {{t.base.content.pluralize}} at"
      created:
        edit_it_by: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.edit}} this {{t.base.basket}} by going to"
        requires_approval: "It requires {{t.base.moderation}} before it will be available to the {{t.base.public}}."
        user_created_basket: "{{user_name}} {{t.base.has}} {{t.base.created}} a {{t.base.new}} {{t.base.basket}} titled '{{basket_name}}'."
      rejected:
        basket_rejected: "The {{t.base.basket}} {{t.base.you}} {{t.base.requested}}, '{{basket_name}}', was {{t.base.rejected}}."
        not_suitable: "This may be because it was inappropriate or unsuitable for this {{t.base.site}}."
    email_footer:
      thanks: "{{t.base.thank_you}},"
    email_to:
      create_new_email: "If not, {{t.base.you}} {{t.base.can}} {{t.base.create}} a {{t.base.new}} message and send it to"
      on_behalf_of: "This {{t.base.email}} {{t.base.was}} {{t.base.sent}} by {{site_name}} on behalf of {{user_name}}."
      replying_to_sender: "Replying to this message should send an {{t.base.email}} to {{user_name}}'s {{t.base.email}} address."
      sent_from_basket_on_site: "{{user_name}} {{t.base.has}} sent you a message {{t.base.from}} the {{basket_name}} {{t.base.basket}} on {{site_name}}."
      sent_from_site: "{{user_name}} {{t.base.has}} sent you a message {{t.base.from}} {{site_name}}."
    forgot_password:
      follow_link: "{{user_name}}, follow the link to {{t.base.reset}} {{t.base.your}} {{t.base.password}}"
    item_flagged_for:
      description: "{{flagging_user_name}} ({{email}}) {{t.base.has}} {{t.base.flagged}} Revision # {{revision}} of this {{t.base.item}} as {{flag}}. This revision was originally submitted by {{submitted_user_name}}."
      note_about_reviewing: "This will tell what versions have been {{t.base.flagged}} and with what.  {{t.base.you.capitalize}} can then {{t.base.preview}} each version.  There is a \"Make this revision\" option on the {{t.base.preview}} page for the version, as well as a \"{{t.base.reject.capitalize}}\" link, too."
      review: "{{t.base.please.capitalize}} {{t.base.review}} the {{t.base.item}}'s {{t.base.history}} and take appropriate action:"
      user_provided_details: "The {{t.base.user}} {{t.base.has}} also provided these details about the {{t.base.flagging}}:"
    join_policy:
      accepted:
        membership_granted: "{{user_name}} {{t.base.has}} {{t.base.accepted}} {{t.base.your}} {{t.base.request}} for {{t.base.membership}} in the {{basket_name}} {{t.base.basket}}."
        participate_by: "{{t.base.you.capitalize}} {{t.base.can}} now participate by going to"
      member:
        joined: "{{user_name}} {{t.base.has}} {{t.base.joined}} the {{basket_name}} {{t.base.basket}}."
        view_memberlist_at: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the {{t.base.member}} list at"
        youre_an_admin: "You are receiving this notification because our records show you are an admin of that {{t.base.basket}}."
      rejected:
        membership_denied: "{{user_name}} {{t.base.has}} {{t.base.rejected}} {{t.base.your}} {{t.base.request}} for {{t.base.membership}} in the {{basket_name}} {{t.base.basket}}."
      request:
        approve_or_reject: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.approve}} or {{t.base.reject}} the application by going to"
        want_access: "{{user_name}} {{t.base.has}} {{t.base.requested}} {{t.base.membership}} of the {{basket_name}} {{t.base.basket}}."
        youre_an_admin: "Our records show {{t.base.you}} are an admin of that {{t.base.basket}}."
    login_changed:
      description: "{{t.base.your.capitalize}} {{t.base.login}} for {{site_name}} {{t.base.was}} {{t.base.changed}} during an upgrade of the software the {{t.base.site}} runs on."
      login_using: "To login, {{t.base.please}} now use the following {{t.base.login}} ({{t.base.your}} {{t.base.password}} remains the same)"
    pending_review_for:
      pending_review: "{{t.base.your.capitalize}} submission of Revision # {{revision}} of this {{t.base.item}} is {{flag}} {{t.base.review}} of a {{t.base.moderator}}.  {{t.base.you.capitalize}} will be notified of the outcome of the {{t.base.review}}."
    private_notifications:
      comment_created:
        comment_created: "A {{t.base.private}} {{t.base.zoom_types.comment}} {{t.base.has_been}} {{t.base.created}} in a {{t.base.basket}} {{t.base.you}} are a {{t.base.member}} of."
        view_item_at: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the {{t.base.new}} {{t.base.zoom_types.comment}} at:"
      comment_edited:
        comment_edited: "A {{t.base.private}} {{t.base.zoom_types.comment}} {{t.base.has_been}} {{t.base.edited}} in a {{t.base.basket}} {{t.base.you}} are a {{t.base.member}} of."
        view_item_at: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the {{t.base.edited}} {{t.base.zoom_types.comment}} at:"
      do_not_reply: "{{t.base.do_not_reply}}"
      item_created:
        item_created: "A {{t.base.private}} {{t.base.item}} {{t.base.has_been}} {{t.base.created}} in a {{t.base.basket}} {{t.base.you}} are a {{t.base.member}} of."
        view_item_at: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the {{t.base.new}} {{t.base.item}} at:"
      item_edited:
        item_edited: "A {{t.base.private}} {{t.base.item}} {{t.base.has_been}} {{t.base.edited}} in a {{t.base.basket}} {{t.base.you}} are a {{t.base.member}} of."
        view_item_at: "{{t.base.you.capitalize}} {{t.base.can}} {{t.base.view}} the {{t.base.edited}} {{t.base.item}} at:"
    rejection_of:
      description: "Revision # {{revision}} of this {{t.base.item}} {{t.base.has_been}} {{t.base.reviewed}} by a {{t.base.moderator}} and {{flag}}. If {{t.base.you}} would like to alter {{t.base.your}} submission, {{t.base.you}} {{t.base.can}} {{t.base.view}} it here:"
      reason: "The {{t.base.moderator}} {{t.base.has}} provided these details about why the {{t.base.site}} decided not to {{t.base.accept}} {{t.base.your}} contribution:"
    reset_password:
      reset: "{{user_name}}, {{t.base.your.capitalize}} {{t.base.password}} {{t.base.has_been}} {{t.base.reset}}."
    review_flagged_for:
      marked_as: "Marked as {{flag}} at {{time}}"
      or: or
      please_review: "{{t.base.please.capitalize}} {{t.base.review}} the submitted {{t.base.content}} in {{basket_name}} and take the appropriate action."
      review_version: "{{t.base.review.capitalize}} this version:"
      view_item_history: "the full {{t.base.item}}'s {{t.base.history}}:"
    reviewing_of:
      description: "Revision # {{revision}} of this {{t.base.item}} {{t.base.has_been}} {{t.base.reviewed}} by a {{t.base.moderator}} and marked {{t.base.reviewed}}. If {{t.base.you}} would like to alter {{t.base.your}} submission, {{t.base.you}} {{t.base.can}} {{t.base.view}} it here:"
      reason: "The {{t.base.moderator}} {{t.base.has}} provided these details about why the {{t.base.site}} decided to leave {{t.base.your}} contribution as is:"
    signup:
      activate_account: "Visit this url to {{t.base.activate}} {{t.base.your}} {{t.base.account}}:"
      code: "{{t.base.code.capitalize}}:"
      created: "{{t.base.your.capitalize}} {{t.base.account}} {{t.base.has_been}} {{t.base.created}}."
      enter_this_code: "If {{t.base.you}} aren't automatically {{t.base.activated}}, {{t.base.please}} {{t.base.enter}} this {{t.base.code}}:"
      password: "{{t.base.password.capitalize}}:"
      username: "{{t.base.username.capitalize}}:"
  user_notifier_model:
    account_activated: "{{t.base.your.capitalize}} {{t.base.account}} {{t.base.has_been}} {{t.base.activated}}!"
    account_banned: "{{t.base.your.capitalize}} {{t.base.account}} {{t.base.has_been}} banned!"
    activate_account: "{{t.base.please.capitalize}} {{t.base.activate}} {{t.base.your}} {{t.base.new}} {{t.base.account}}"
    awaiting_review: "{{t.base.user.capitalize}} {{t.base.contribution.pluralize}} waiting {{t.base.review}} in {{basket_name}}."
    basket_approved: "{{basket_name}} {{t.base.basket}} {{t.base.creation}} {{t.base.has_been}} {{t.base.approved}}"
    basket_created: "{{user_name}} {{t.base.has}} {{t.base.created}} the {{basket_name}} {{t.base.basket}}"
    basket_rejected: "{{basket_name}} {{t.base.basket}} {{t.base.creation}} {{t.base.has_been}} {{t.base.rejected}}"
    basket_requested: "{{user_name}} {{t.base.has}} {{t.base.requested}} {{t.base.creation}} of the {{basket_name}} {{t.base.basket}}"
    item_flagged_with: "{{t.base.item.capitalize}} {{t.base.flagged}} {{flag}} for {{t.base.moderation}}."
    login_changed: "{{t.base.your.capitalize}} {{t.base.login}} {{t.base.has_been}} altered in an upgrade."
    membership_accepted: "{{t.base.membership.capitalize}} to {{basket_name}} {{t.base.accepted}}"
    membership_rejected: "{{t.base.membership.capitalize}} to {{basket_name}} {{t.base.rejected}}"
    password_change: "{{t.base.request.capitalize}} to {{t.base.change}} {{t.base.your}} {{t.base.password}}"
    password_reset: "{{t.base.your.capitalize}} {{t.base.password}} {{t.base.has_been}} {{t.base.reset}}"
    pending_moderation: "{{t.base.your.capitalize}} submission is {{flag}} {{t.base.moderation}}."
    private_comment_created: "A {{t.base.new}} {{t.base.private}} {{t.base.zoom_types.comment}} {{t.base.has_been}} {{t.base.added}} to an {{t.base.item}}."
    private_comment_created_with_title: "A {{t.base.new}} {{t.base.private}} {{t.base.zoom_types.comment}} titled '{{item_title}}' {{t.base.has_been}} {{t.base.added}} to an {{t.base.item}}."
    private_comment_edited: "A {{t.base.private}} {{t.base.zoom_types.comment}} {{t.base.has_been}} {{t.base.edited}}."
    private_comment_edited_with_title: "A {{t.base.private}} {{t.base.zoom_types.comment}} titled '{{item_title}}' {{t.base.has_been}} {{t.base.edited}}."
    private_item_created: "A {{t.base.new}} {{t.base.private}} {{t.base.item}} {{t.base.has_been}} {{t.base.created}} in {{basket_name}}."
    private_item_created_with_title: "A {{t.base.new}} {{t.base.private}} {{t.base.item}} titled '{{item_title}}' {{t.base.has_been}} {{t.base.created}} in {{basket_name}}."
    private_item_edited: "A {{t.base.private}} {{t.base.item}} {{t.base.has_been}} {{t.base.edited}}."
    private_item_edited_with_title: "The {{t.base.private}} {{t.base.item}} '{{item_title}}' {{t.base.has_been}} {{t.base.edited}}."
    rejected_submission: "A {{t.base.moderator}} {{t.base.has}} {{flag}} {{t.base.your}} submission."
    reviewed_submission: "A {{t.base.moderator}} {{t.base.has}} {{flag}} {{t.base.your}} submission."
    revision_live: "A {{t.base.moderator}} {{t.base.has}} {{t.base.made}} {{t.base.your}} submission the live revision."
    user_joined: "{{user_name}} {{t.base.has}} {{t.base.joined}} the {{basket_name}} {{t.base.basket}}"
    user_requested: "{{user_name}} {{t.base.has}} {{t.base.requested}} {{t.base.membership}} in {{basket_name}} {{t.base.basket}}"
    user_sent_message: "{{user_name}} {{t.base.has}} {{t.base.sent}} {{t.base.you}} a message."
  video:
    details:
      filename: "Filename:"
      not_available: "no {{t.base.public}} version of this {{t.base.zoom_types.video}} available"
      size: "Size:"
      type: "Recording {{t.base.type}}:"
    edit:
      not_authorized: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
  video_controller:
    update:
      updated: "{{t.base.zoom_types.video.capitalize}} {{t.base.was_updated}}."
  video_model:
    not_acceptable_content_type: "is {{t.base.not_acceptable}}. It should be a .mov, .wmv, or other {{t.base.zoom_types.video}} file."
    not_acceptable_size: "{{t.base.not_acceptable_size}}"
  web_links:
    details:
      not_available: "no {{t.base.public}} version of this link available"
      url: "url:"
    edit:
      not_authorized: "Sorry - {{t.base.editing}} on this section of the {{t.base.site}} {{t.base.has_been}} {{t.base.disallowed}}"
  web_links_controller:
    update:
      updated: "{{t.base.zoom_types.web_link.capitalize}} {{t.base.was_updated}}."
  worker_controller_helpers_lib:
    rebuild_zoom_index:
      aready_rebuilding: "There is another {{t.base.search}} record rebuild running at this time.  {{t.base.please_try_again_later.capitalize}}."
  zoom_controller_helpers_lib:
    zoom_class_humanize:
      audio_recording: "{{t.base.zoom_types.audio.capitalize}}"
      combined: "{{t.base.zoom_types.combined.capitalize}}"
      comment: "{{t.base.zoom_types.discussion.capitalize}}"
      document: "{{t.base.zoom_types.document.capitalize}}"
      still_image: "{{t.base.zoom_types.image.capitalize}}"
      topic: "{{t.base.zoom_types.topic.capitalize}}"
      video: "{{t.base.zoom_types.video.capitalize}}"
      web_link: "{{t.base.zoom_types.web_link.capitalize}}"
    zoom_class_plural_humanize:
      audio_recording: "{{t.base.zoom_types.audio.capitalize}}"
      combined: "{{t.base.zoom_types.combined.capitalize}}"
      comment: "{{t.base.zoom_types.discussion.capitalize}}"
      document: "{{t.base.zoom_types.document.capitalize.pluralize}}"
      still_image: "{{t.base.zoom_types.image.capitalize.pluralize}}"
      topic: "{{t.base.zoom_types.topic.capitalize.pluralize}}"
      video: "{{t.base.zoom_types.video.capitalize}}"
      web_link: "{{t.base.zoom_types.web_link.capitalize.pluralize}}"
    zoom_destroy_and_redirect:
      destroyed: "{{pretty_zoom_class}} {{t.base.was_deleted}}."
  zoom_dbs_controller:
    title: "Zoom Dbs"
  zoom_helpers_lib:
    zoom_controllers_as_options:
      all: "{{t.base.all.capitalize}} {{zoom_class}}"
